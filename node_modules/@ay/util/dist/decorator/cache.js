"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var isEqual_1 = require("../isEqual");
var defaults_1 = require("../defaults");
function cache() {
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
    }
    var func;
    var wait;
    var deep;
    var caches;
    var cacheFunc = function () {
        var params = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            params[_i] = arguments[_i];
        }
        var cache = caches.find(function (cache) { return isEqual_1.isEqual(cache.params, params, deep); });
        if (cache)
            return cache.result;
        var result = func.apply(this, params.slice());
        cache = { params: params, result: result };
        caches.push(cache);
        setTimeout(function () {
            var idx = caches.indexOf(cache);
            caches.splice(idx, 1);
        }, wait);
        return result;
    };
    if (args[0] instanceof Function) {
        func = args[0];
        wait = defaults_1.defaults(args[1], 3000);
        deep = defaults_1.defaults(args[2], false);
        if (_caches[func.name] === undefined)
            _caches[func.name] = [];
        caches = _caches[func.name];
        return cacheFunc;
    }
    else {
        wait = defaults_1.defaults(args[0], 3000);
        deep = defaults_1.defaults(args[1], false);
        return function decorator(target, key, descriptor) {
            func = descriptor.value;
            if (_caches[key] === undefined)
                _caches[key] = [];
            caches = _caches[key];
            descriptor.value = cacheFunc;
            return descriptor;
        };
    }
}
exports.cache = cache;
var _caches = {};
//# sourceMappingURL=cache.js.map