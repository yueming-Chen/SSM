"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("should");
var index_1 = require("./index");
describe("CamelCase", function () {
    it("camelCase('foo')", function () { return index_1.camelCase('foo').should.equal('foo'); });
    it("camelCase('foo-bar')", function () { return index_1.camelCase('foo-bar').should.equal('fooBar'); });
    it("camelCase('foo-bar-baz')", function () { return index_1.camelCase('foo-bar-baz').should.equal('fooBarBaz'); });
    it("camelCase('foo--bar')", function () { return index_1.camelCase('foo--bar').should.equal('fooBar'); });
    it("camelCase('--foo-bar')", function () { return index_1.camelCase('--foo-bar').should.equal('fooBar'); });
    it("camelCase('--foo--bar')", function () { return index_1.camelCase('--foo--bar').should.equal('fooBar'); });
    it("camelCase('FOO-BAR')", function () { return index_1.camelCase('FOO-BAR').should.equal('fooBar'); });
    it("camelCase('FOÈ-BAR')", function () { return index_1.camelCase('FOÈ-BAR').should.equal('foèBar'); });
    it("camelCase('-foo-bar-')", function () { return index_1.camelCase('-foo-bar-').should.equal('fooBar'); });
    it("camelCase('--foo--bar--')", function () { return index_1.camelCase('--foo--bar--').should.equal('fooBar'); });
    it("camelCase('foo.bar')", function () { return index_1.camelCase('foo.bar').should.equal('fooBar'); });
    it("camelCase('foo..bar')", function () { return index_1.camelCase('foo..bar').should.equal('fooBar'); });
    it("camelCase('..foo..bar..')", function () { return index_1.camelCase('..foo..bar..').should.equal('fooBar'); });
    it("camelCase('foo_bar')", function () { return index_1.camelCase('foo_bar').should.equal('fooBar'); });
    it("camelCase('__foo__bar__')", function () { return index_1.camelCase('__foo__bar__').should.equal('fooBar'); });
    it("camelCase('__foo__bar__')", function () { return index_1.camelCase('__foo__bar__').should.equal('fooBar'); });
    it("camelCase('foo bar')", function () { return index_1.camelCase('foo bar').should.equal('fooBar'); });
    it("camelCase('  foo  bar  ')", function () { return index_1.camelCase('  foo  bar  ').should.equal('fooBar'); });
    it("camelCase('fooBar')", function () { return index_1.camelCase('fooBar').should.equal('fooBar'); });
    it("camelCase('fooBar-baz')", function () { return index_1.camelCase('fooBar-baz').should.equal('fooBarBaz'); });
    it("camelCase('foìBar-baz')", function () { return index_1.camelCase('foìBar-baz').should.equal('foìBarBaz'); });
    it("camelCase('fooBarBaz-bazzy')", function () { return index_1.camelCase('fooBarBaz-bazzy').should.equal('fooBarBazBazzy'); });
    it("camelCase('FBBazzy')", function () { return index_1.camelCase('FBBazzy').should.equal('fbBazzy'); });
    it("camelCase('F')", function () { return index_1.camelCase('F').should.equal('f'); });
    it("camelCase('FooBar')", function () { return index_1.camelCase('FooBar').should.equal('fooBar'); });
    it("camelCase('Foo')", function () { return index_1.camelCase('Foo').should.equal('foo'); });
    it("camelCase('FOO')", function () { return index_1.camelCase('FOO').should.equal('foo'); });
    it("camelCase('foo', 'bar')", function () { return index_1.camelCase('foo', 'bar').should.equal('fooBar'); });
    it("camelCase('foo', '-bar')", function () { return index_1.camelCase('foo', '-bar').should.equal('fooBar'); });
    it("camelCase('foo', '-bar', 'baz')", function () { return index_1.camelCase('foo', '-bar', 'baz').should.equal('fooBarBaz'); });
    it("camelCase('foo bar?')", function () { return index_1.camelCase('foo bar?').should.equal('fooBar?'); });
    it("camelCase('foo bar!')", function () { return index_1.camelCase('foo bar!').should.equal('fooBar!'); });
    it("camelCase('foo bar$')", function () { return index_1.camelCase('foo bar$').should.equal('fooBar$'); });
    it("camelCase('foo-bar#')", function () { return index_1.camelCase('foo-bar#').should.equal('fooBar#'); });
    it("camelCase('XMLHttpRequest')", function () { return index_1.camelCase('XMLHttpRequest').should.equal('xmlHttpRequest'); });
    it("camelCase('AjaxXMLHttpRequest')", function () { return index_1.camelCase('AjaxXMLHttpRequest').should.equal('ajaxXmlHttpRequest'); });
    it("camelCase('Ajax-XMLHttpRequest')", function () { return index_1.camelCase('Ajax-XMLHttpRequest').should.equal('ajaxXmlHttpRequest'); });
    it("CamelCase('Ajax-XMLHttpRequest')", function () { return index_1.CamelCase('Ajax-XMLHttpRequest').should.equal('AjaxXmlHttpRequest'); });
    it("camelCase('-')", function () { return index_1.camelCase('-').should.equal('-'); });
    it("camelCase(' - ')", function () { return index_1.camelCase(' - ').should.equal('-'); });
    it("camelCase('', '')", function () { return index_1.camelCase('', '').should.equal(''); });
    it("camelCase('--')", function () { return index_1.camelCase('--').should.equal(''); });
    it("camelCase('')", function () { return index_1.camelCase('').should.equal(''); });
    it("camelCase('--__--_--_')", function () { return index_1.camelCase('--__--_--_').should.equal(''); });
    it("camelCase('---_', '--', '', '-_- ')", function () { return index_1.camelCase('---_', '--', '', '-_- ').should.equal(''); });
});
//# sourceMappingURL=camelcase.spec.js.map