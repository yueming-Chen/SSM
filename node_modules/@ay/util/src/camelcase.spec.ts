import * as mocha from "mocha";
import * as should from "should";
require("should");
import { camelCase, CamelCase } from "./index";
describe("CamelCase", () => {
  it("camelCase('foo')", () => camelCase('foo').should.equal('foo'));
  it("camelCase('foo-bar')", () => camelCase('foo-bar').should.equal('fooBar'));
  it("camelCase('foo-bar-baz')", () => camelCase('foo-bar-baz').should.equal('fooBarBaz'));
  it("camelCase('foo--bar')", () => camelCase('foo--bar').should.equal('fooBar'));
  it("camelCase('--foo-bar')", () => camelCase('--foo-bar').should.equal('fooBar'));
  it("camelCase('--foo--bar')", () => camelCase('--foo--bar').should.equal('fooBar'));
  it("camelCase('FOO-BAR')", () => camelCase('FOO-BAR').should.equal('fooBar'));
  it("camelCase('FOÈ-BAR')", () => camelCase('FOÈ-BAR').should.equal('foèBar'));
  it("camelCase('-foo-bar-')", () => camelCase('-foo-bar-').should.equal('fooBar'));
  it("camelCase('--foo--bar--')", () => camelCase('--foo--bar--').should.equal('fooBar'));
  it("camelCase('foo.bar')", () => camelCase('foo.bar').should.equal('fooBar'));
  it("camelCase('foo..bar')", () => camelCase('foo..bar').should.equal('fooBar'));
  it("camelCase('..foo..bar..')", () => camelCase('..foo..bar..').should.equal('fooBar'));
  it("camelCase('foo_bar')", () => camelCase('foo_bar').should.equal('fooBar'));
  it("camelCase('__foo__bar__')", () => camelCase('__foo__bar__').should.equal('fooBar'));
  it("camelCase('__foo__bar__')", () => camelCase('__foo__bar__').should.equal('fooBar'));
  it("camelCase('foo bar')", () => camelCase('foo bar').should.equal('fooBar'));
  it("camelCase('  foo  bar  ')", () => camelCase('  foo  bar  ').should.equal('fooBar'));
  it("camelCase('fooBar')", () => camelCase('fooBar').should.equal('fooBar'));
  it("camelCase('fooBar-baz')", () => camelCase('fooBar-baz').should.equal('fooBarBaz'));
  it("camelCase('foìBar-baz')", () => camelCase('foìBar-baz').should.equal('foìBarBaz'));
  it("camelCase('fooBarBaz-bazzy')", () => camelCase('fooBarBaz-bazzy').should.equal('fooBarBazBazzy'));
  it("camelCase('FBBazzy')", () => camelCase('FBBazzy').should.equal('fbBazzy'));
  it("camelCase('F')", () => camelCase('F').should.equal('f'));
  it("camelCase('FooBar')", () => camelCase('FooBar').should.equal('fooBar'));
  it("camelCase('Foo')", () => camelCase('Foo').should.equal('foo'));
  it("camelCase('FOO')", () => camelCase('FOO').should.equal('foo'));
  it("camelCase('foo', 'bar')", () => camelCase('foo', 'bar').should.equal('fooBar'));
  it("camelCase('foo', '-bar')", () => camelCase('foo', '-bar').should.equal('fooBar'));
  it("camelCase('foo', '-bar', 'baz')", () => camelCase('foo', '-bar', 'baz').should.equal('fooBarBaz'));
  it("camelCase('foo bar?')", () => camelCase('foo bar?').should.equal('fooBar?'));
  it("camelCase('foo bar!')", () => camelCase('foo bar!').should.equal('fooBar!'));
  it("camelCase('foo bar$')", () => camelCase('foo bar$').should.equal('fooBar$'));
  it("camelCase('foo-bar#')", () => camelCase('foo-bar#').should.equal('fooBar#'));
  it("camelCase('XMLHttpRequest')", () => camelCase('XMLHttpRequest').should.equal('xmlHttpRequest'));
  it("camelCase('AjaxXMLHttpRequest')", () => camelCase('AjaxXMLHttpRequest').should.equal('ajaxXmlHttpRequest'));
  it("camelCase('Ajax-XMLHttpRequest')", () => camelCase('Ajax-XMLHttpRequest').should.equal('ajaxXmlHttpRequest'));
  it("CamelCase('Ajax-XMLHttpRequest')", () => CamelCase('Ajax-XMLHttpRequest').should.equal('AjaxXmlHttpRequest'));

  it("camelCase('-')", () => camelCase('-').should.equal('-'));
  it("camelCase(' - ')", () => camelCase(' - ').should.equal('-'));
  it("camelCase('', '')", () => camelCase('', '').should.equal(''));
  it("camelCase('--')", () => camelCase('--').should.equal(''));
  it("camelCase('')", () => camelCase('').should.equal(''));
  it("camelCase('--__--_--_')", () => camelCase('--__--_--_').should.equal(''));
  it("camelCase('---_', '--', '', '-_- ')", () => camelCase('---_', '--', '', '-_- ').should.equal(''));
});
