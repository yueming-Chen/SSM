import * as mocha from "mocha";
import * as should from "should";
import * as assert from "assert";
require("should");
import { cache } from "./cache";

describe('cache', () => {
  class CacheCalc {
    public count: number = 0;

    @cache(10)
    addTo(from: number, to: number) {
      let sum = 0;
      for (let i = from; i <= to; i++) {
        sum += i;
        this.count++;
      }
      return sum;
    }
  }

  it(`快取時間內取用快取資料`, () => {
    let calc = new CacheCalc();
    calc.addTo(1, 10).should.equal(55);
    calc.count.should.equal(10);
    calc.addTo(1, 10).should.equal(55);
    calc.count.should.equal(10);
  });

  it('不同的參數不會採用相同的結果', () => {
    let calc = new CacheCalc();
    calc.addTo(11, 20).should.equal(155);
    calc.addTo(11, 21).should.equal(176);
    calc.count.should.equal(21);
  });

  it('快取在指定時間內會清除', (done) => {
    let calc = new CacheCalc();
    calc.addTo(21, 30).should.equal(255);
    setTimeout((e) => {
      calc.addTo(21, 30).should.equal(255);
      calc.count.should.equal(20);
      done();
    }, 30);
  })

  let cnt = 0;
  function fn() { cnt++; }
  it('可以直接套用在執行函數時', () => {
    cache(fn, 3000)();
    cache(fn, 3000)();
    cache(fn, 3000)();
    cnt.should.equal(1);
  });
});
