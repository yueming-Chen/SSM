import { Component, Output, EventEmitter, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, Renderer, HostListener, ViewEncapsulation } from '@angular/core';
import { uniqueId } from '../util/util';
var TooltipComponent = (function () {
    function TooltipComponent(element, renderer, changeDetector) {
        this.element = element;
        this.renderer = renderer;
        this.changeDetector = changeDetector;
        this.afterViewInit = new EventEmitter();
        this.onInteraction = new EventEmitter();
        this.uid = uniqueId('popover');
        this.renderer.setElementStyle(this.element.nativeElement, 'position', 'absolute');
    }
    TooltipComponent.prototype.ngAfterViewInit = function () {
        this.afterViewInit.emit();
    };
    TooltipComponent.prototype.interactiveHandler = function (evt, isEnter) {
        this.onInteraction.emit(isEnter);
    };
    TooltipComponent.decorators = [
        { type: Component, args: [{
                    selector: 'ay-tooltip',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    template: "\n    <div class=\"tooltip\" [id]=\"uid\"><ng-content></ng-content></div>\n  ",
                    styles: ["\n    ay-tooltip {\n      background-color: #222F3C;\n      border-radius: 4px;\n      box-shadow: 0 1px 7px rgba(0, 0, 0, 0.05), 0 7px 17px rgba(0, 0, 0, 0.1);\n      color: #FFF;\n      padding: .25em 1em; }\n  "],
                    encapsulation: ViewEncapsulation.None
                },] },
    ];
    /** @nocollapse */
    TooltipComponent.ctorParameters = function () { return [
        { type: ElementRef, },
        { type: Renderer, },
        { type: ChangeDetectorRef, },
    ]; };
    TooltipComponent.propDecorators = {
        'afterViewInit': [{ type: Output },],
        'onInteraction': [{ type: Output },],
        'interactiveHandler': [{ type: HostListener, args: ['mouseenter', ['$event', 'true'],] }, { type: HostListener, args: ['mouseleave', ['$event', 'false'],] },],
    };
    return TooltipComponent;
}());
export { TooltipComponent };
//# sourceMappingURL=tooltip.component.js.map