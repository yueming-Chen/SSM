{"version":3,"sources":["../../tmp/tooltip/tooltip.component.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAA,EAAkB,MAAA,EAAQ,YAAA,EAAc,uBAAA,EAAyB,UAAA,EAAY,iBAAA,EAAmB,QAAA,EAAU,YAAA,EAA2B,iBAAA,EAAkB,MAAO,eAAA,CAAgB;AACvL,OAAO,EAA2B,QAAA,EAAS,MAAO,cAAA,CAAe;AAKjE;IAUE,0BACS,OAAmB,EACnB,QAAkB,EAClB,cAAiC;QAFjC,YAAO,GAAP,OAAO,CAAY;QACnB,aAAQ,GAAR,QAAQ,CAAU;QAClB,mBAAc,GAAd,cAAc,CAAmB;QAVnC,kBAAa,GAAG,IAAI,YAAY,EAAE,CAAC;QAGnC,kBAAa,GAAG,IAAI,YAAY,EAAW,CAAC;QAE5C,QAAG,GAAG,QAAQ,CAAC,SAAS,CAAC,CAAC;QAO/B,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;IACpF,CAAC;IAEM,0CAAe,GAAtB;QACE,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;IAC5B,CAAC;IAIM,6CAAkB,GAAzB,UAA0B,GAAU,EAAE,OAAgB;QACpD,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACnC,CAAC;IACI,2BAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;oBACxB,QAAQ,EAAE,YAAY;oBACtB,eAAe,EAAE,uBAAuB,CAAC,MAAM;oBAC/C,QAAQ,EAAE,+EAET;oBACD,MAAM,EAAE,CAAC,uNAOR,CAAC;oBACF,aAAa,EAAE,iBAAiB,CAAC,IAAI;iBACtC,EAAG,EAAE;KACL,CAAC;IACF,kBAAkB;IACX,+BAAc,GAAmE,cAAM,OAAA;QAC9F,EAAC,IAAI,EAAE,UAAU,GAAG;QACpB,EAAC,IAAI,EAAE,QAAQ,GAAG;QAClB,EAAC,IAAI,EAAE,iBAAiB,GAAG;KAC1B,EAJ6F,CAI7F,CAAC;IACK,+BAAc,GAA2C;QAChE,eAAe,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE;QACpC,eAAe,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE;QACpC,oBAAoB,EAAE,CAAC,EAAE,IAAI,EAAE,YAAY,EAAE,IAAI,EAAE,CAAC,YAAY,EAAE,CAAC,QAAQ,EAAE,MAAM,CAAC,EAAG,EAAE,EAAC,EAAE,IAAI,EAAE,YAAY,EAAE,IAAI,EAAE,CAAC,YAAY,EAAE,CAAC,QAAQ,EAAE,OAAO,CAAC,EAAG,EAAE,EAAE;KAC9J,CAAC;IACF,uBAAC;CAxDD,AAwDC,IAAA;SAxDY,gBAAgB","file":"tooltip.component.js","sourceRoot":"","sourcesContent":["import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, Renderer, HostListener, HostBinding, ViewEncapsulation } from '@angular/core';\nimport { replaceClass, toBoolean, uniqueId } from '../util/util';\n\nexport type Direction = 'top' | 'right' | 'bottom' | 'left';\n\n\nexport class TooltipComponent {\n\n  \n  public afterViewInit = new EventEmitter();\n\n  \n  public onInteraction = new EventEmitter<boolean>();\n\n  public uid = uniqueId('popover');\n\n  constructor(\n    public element: ElementRef,\n    public renderer: Renderer,\n    public changeDetector: ChangeDetectorRef\n  ) {\n    this.renderer.setElementStyle(this.element.nativeElement, 'position', 'absolute');\n  }\n\n  public ngAfterViewInit() {\n    this.afterViewInit.emit();\n  }\n\n  \n  \n  public interactiveHandler(evt: Event, isEnter: boolean) {\n    this.onInteraction.emit(isEnter);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ay-tooltip',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <div class=\"tooltip\" [id]=\"uid\"><ng-content></ng-content></div>\n  `,\n  styles: [`\n    ay-tooltip {\n      background-color: #222F3C;\n      border-radius: 4px;\n      box-shadow: 0 1px 7px rgba(0, 0, 0, 0.05), 0 7px 17px rgba(0, 0, 0, 0.1);\n      color: #FFF;\n      padding: .25em 1em; }\n  `],\n  encapsulation: ViewEncapsulation.None\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer, },\n{type: ChangeDetectorRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'afterViewInit': [{ type: Output },],\n'onInteraction': [{ type: Output },],\n'interactiveHandler': [{ type: HostListener, args: ['mouseenter', ['$event', 'true'], ] },{ type: HostListener, args: ['mouseleave', ['$event', 'false'], ] },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}