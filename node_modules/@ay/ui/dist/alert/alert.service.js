import { Injectable } from "@angular/core";
import * as sweetalert2 from "sweetalert2";
var AlertService = (function () {
    function AlertService() {
        this.sweetalert2 = sweetalert2;
    }
    AlertService.prototype.prompt = function (option, type) {
        return this.custom(option, {
            showCancelButton: true,
            type: "info",
            input: type
        });
    };
    AlertService.prototype.confirm = function (option) {
        return this.custom(option, {
            showCancelButton: true,
            type: "warning"
        });
    };
    AlertService.prototype.alert = function (option) {
        return this.custom(option, {
            type: "info"
        });
    };
    AlertService.prototype.question = function (option) {
        return this.custom(option, { type: "question", animation: true });
    };
    AlertService.prototype.success = function (option) {
        return this.custom(option, { type: "success" });
    };
    AlertService.prototype.error = function (option) {
        return this.custom(option, { type: "error" });
    };
    AlertService.prototype.warning = function (option) {
        return this.custom(option, { type: "warning" });
    };
    AlertService.prototype.info = function (option) {
        return this.custom(option, { type: "info" });
    };
    AlertService.prototype.custom = function (optionOrText, option) {
        if (option === void 0) { option = {}; }
        if (typeof (optionOrText) === "string") {
            optionOrText = { text: optionOrText };
        }
        var defaultOption = {
            confirmButtonText: "確認",
            cancelButtonText: "取消",
            background: "#f2f2f2"
        };
        option = Object.assign({}, defaultOption, optionOrText, option);
        return this.sweetalert2(option);
    };
    AlertService.prototype.queue = function () {
        var options = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            options[_i] = arguments[_i];
        }
        var defalutOption = {
            input: 'text',
            confirmButtonText: '下一步',
            cancelButtonText: '取消',
            showCancelButton: true,
            background: "#f2f2f2",
            animation: true
        };
        var progressSteps = [];
        options = options.map(function (option, index) {
            if (typeof option === "string") {
                option = { text: option };
            }
            option = Object.assign({}, defalutOption, option);
            option.step = option.step || (index + 1).toString();
            if (option.step.substr(0, 3) == "fa-")
                option.step = "<span class='fa " + option.step + "'></span>";
            progressSteps.push(option.step);
            option.progressSteps = progressSteps;
            return option;
        });
        return this.sweetalert2.queue(options);
    };
    AlertService.decorators = [
        { type: Injectable },
    ];
    /** @nocollapse */
    AlertService.ctorParameters = function () { return []; };
    return AlertService;
}());
export { AlertService };
//# sourceMappingURL=alert.service.js.map