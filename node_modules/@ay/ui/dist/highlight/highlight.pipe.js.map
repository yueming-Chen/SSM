{"version":3,"sources":["../../tmp/highlight/highlight.pipe.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,IAAA,EAAqC,MAAO,eAAA,CAAgB;AACrE,OAAO,EAAE,YAAA,EAAuB,MAAO,2BAAA,CAA4B;AAGnE;IACE,uBAAoB,SAAuB;QAAvB,cAAS,GAAT,SAAS,CAAc;IAAI,CAAC;IAEzC,iCAAS,GAAhB,UAAiB,KAAa,EAAE,MAAc;QAC5C,EAAE,CAAC,CAAC,MAAM,IAAI,EAAE,CAAC;YAAC,MAAM,CAAC,KAAK,CAAC;QAC/B,MAAM,GAAG,MAAM,CAAC,WAAW,EAAE,CAAC;QAC9B,IAAI,GAAG,GAAG,CAAC,CAAC;QACZ,OAAO,CAAC,EAAE,CAAC;YACT,GAAG,GAAG,KAAK,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;YAC/C,EAAE,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;gBAAC,KAAK,CAAC;YACtB,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,GAAG,CAAC,GAAG,0BAA0B,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC,GAAG,SAAS,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC;YAChJ,GAAG,IAAI,EAAE,GAAG,MAAM,CAAC,MAAM,CAAC;QAC5B,CAAC;QACD,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,uBAAuB,CAAC,KAAK,CAAC,CAAC;IACvD,CAAC;IACI,wBAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;oBACnB,IAAI,EAAE,WAAW;iBAClB,EAAG,EAAE;KACL,CAAC;IACF,kBAAkB;IACX,4BAAc,GAAmE,cAAM,OAAA;QAC9F,EAAC,IAAI,EAAE,YAAY,GAAG;KACrB,EAF6F,CAE7F,CAAC;IACF,oBAAC;CAxBD,AAwBC,IAAA;SAxBY,aAAa","file":"highlight.pipe.js","sourceRoot":"","sourcesContent":["import { Pipe, PipeTransform, SecurityContext } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from \"@angular/platform-browser\";\n\n\nexport class HighlightPipe implements PipeTransform {\n  constructor(private sanitizer: DomSanitizer) { }\n\n  public transform(value: string, target: string): SafeHtml {\n    if (target == \"\") return value;\n    target = target.toLowerCase();\n    let idx = 0;\n    while (1) {\n      idx = value.toLowerCase().indexOf(target, idx);\n      if (idx === -1) break;\n      value = value.slice(0, idx) + \"<span class='highlight'>\" + value.slice(idx, idx + target.length) + \"</span>\" + value.slice(idx + target.length);\n      idx += 31 + target.length;\n    }\n    return this.sanitizer.bypassSecurityTrustHtml(value);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{\n  name: 'highlight'\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DomSanitizer, },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}