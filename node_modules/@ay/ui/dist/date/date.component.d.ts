/// <reference types="moment" />
import { AfterContentInit, OnDestroy, ElementRef, TemplateRef, EventEmitter } from '@angular/core';
import * as moment from "moment";
export declare type SelectableCondition = (date: moment.Moment) => boolean;
export declare class DateComponent implements AfterContentInit, OnDestroy {
    private _ymChange$;
    private _dateChange$;
    private _data$;
    datepicker: this;
    years: string[];
    months: number[];
    momthString: string[];
    weekdayString: string[];
    minYear: number;
    maxYear: number;
    format: string;
    /** weeks */
    private _weeks;
    weeksChange: EventEmitter<moment.Moment[][]>;
    weeks: moment.Moment[][];
    /** year */
    private _year;
    yearChange: EventEmitter<number>;
    year: number;
    /** month */
    private _month;
    monthChange: EventEmitter<number>;
    month: number;
    /** date */
    private _date;
    dateChange: EventEmitter<moment.Moment[]>;
    date: moment.Moment[];
    /** data */
    private _data;
    dataChange: EventEmitter<string[]>;
    data: string[];
    /** selectable */
    private _selectable;
    selectableChange: EventEmitter<SelectableCondition>;
    selectable: SelectableCondition;
    /** multi */
    private _multi;
    multiChange: EventEmitter<number>;
    multi: number;
    /** isContinue */
    private _isContinue;
    isContinueChange: EventEmitter<boolean>;
    isContinue: boolean;
    /** header */
    defaultHeaderTemplate: ElementRef;
    headerTemplate: TemplateRef<any>;
    /** Year */
    defaultYearTemplate: ElementRef;
    yearTemplate: TemplateRef<any>;
    /** YearDropdownDisplay */
    defaultYearDropdownDisplayTemplate: ElementRef;
    yearDropdownDisplayTemplate: TemplateRef<any>;
    /** YearDropdownItem */
    defaultYearDropdownItemTemplate: ElementRef;
    yearDropdownItemTemplate: TemplateRef<any>;
    /** Month */
    defaultMonthTemplate: ElementRef;
    monthTemplate: TemplateRef<any>;
    /** MonthDropdownDisplay */
    defaultMonthDropdownDisplayTemplate: ElementRef;
    monthDropdownDisplayTemplate: TemplateRef<any>;
    /** MonthDropdownItem */
    defaultMonthDropdownItemTemplate: ElementRef;
    monthDropdownItemTemplate: TemplateRef<any>;
    /** Day */
    defaultDayTemplate: ElementRef;
    dayTemplate: TemplateRef<any>;
    /** Weeks */
    defaultWeeksTemplate: ElementRef;
    weeksTemplate: TemplateRef<any>;
    /** Weekday */
    defaultWeekdayTemplate: ElementRef;
    weekdayTemplate: TemplateRef<any>;
    constructor();
    ngAfterContentInit(): void;
    ngOnDestroy(): void;
    afterDateChange(): void;
    afterYMChange(): void;
    onError(err: any): void;
    recalcIsSelected(): void;
    initYearAndMonthFromData(): void;
    selectDay(day: moment.Moment): void;
    nextMonth(): void;
    prevMonth(): void;
}
