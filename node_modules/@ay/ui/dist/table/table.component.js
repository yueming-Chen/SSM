var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import { Component, ViewChildren, ContentChild, ViewEncapsulation, Output, EventEmitter, Input, ContentChildren, ViewChild, Renderer, NgZone } from '@angular/core';
import { ColumnComponent } from "../table/column.component";
import { defaults, bind } from "@ay/util/dist";
import { toggleClass } from "../util/util";
var TableComponent = (function () {
    //- 事件函數
    function TableComponent(_renderer, _ngZone) {
        this._renderer = _renderer;
        this._ngZone = _ngZone;
        // 公用變數
        this.table = this;
        this.columns = [];
        this.sortColumn = -1;
        this.sortDirection = true;
        this.page = 1;
        this.displayAmount = 10;
        this.keywordChange = new EventEmitter();
        /** freezeWidth */
        this._freezeWidth = 0;
        this.freezeWidthChange = new EventEmitter();
        /** thHeight */
        this._thHeight = 0;
        this.thHeightChange = new EventEmitter();
        this.filteredDataChange = new EventEmitter();
        this.dataChange = new EventEmitter();
        //- 樣板
        /** ColumnDirective */
        this.columnComponents = null;
        /** Th */
        this.defaultThTemplate = null;
        this.thTemplate = null;
        /** Td */
        this.defaultTdTemplate = null;
        this.tdTemplate = null;
        /** ColumnElements */
        this.columnElements = null;
        /** FreezeColumnElement */
        this.freezeColumnElements = null;
        this.theadScrollComponent = null;
        this.theadFreezeElement = null;
        this.tbodyFreezeScrollComponent = null;
        this.tbodyScrollComponent = null;
    }
    Object.defineProperty(TableComponent.prototype, "keyword", {
        get: function () {
            return this._keyword;
        },
        set: function (keyword) {
            if (this._keyword === keyword)
                return;
            this._keyword = keyword;
            this.keywordChange.emit(this._keyword);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TableComponent.prototype, "freezeWidth", {
        get: function () {
            return this._freezeWidth;
        },
        set: function (freezeWidth) {
            if (this._freezeWidth === freezeWidth)
                return;
            this._freezeWidth = freezeWidth;
            this.freezeWidthChange.emit(this._freezeWidth);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TableComponent.prototype, "thHeight", {
        get: function () {
            return this._thHeight;
        },
        set: function (thHeight) {
            if (this._thHeight === thHeight)
                return;
            this._thHeight = thHeight;
            this.thHeightChange.emit(this._thHeight);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TableComponent.prototype, "filteredData", {
        get: function () {
            return this._filteredData;
        },
        set: function (filteredData) {
            if (this._filteredData === filteredData)
                return;
            this._filteredData = filteredData;
            this.filteredDataChange.emit(this.filteredData);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TableComponent.prototype, "data", {
        get: function () {
            return this._data;
        },
        set: function (data) {
            if (this._data === data)
                return;
            this._data = data;
            this.displayData = this.filteredData = data;
            this.dataChange.emit(this._data);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TableComponent.prototype, "filterDisable", {
        get: function () {
            return this._filterDisable;
        },
        set: function (filter) {
            if (this._filterDisable === filter)
                return;
            this._filterDisable = filter;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TableComponent.prototype, "headerDisable", {
        get: function () {
            return this._headerDisable;
        },
        set: function (headerDisable) {
            if (this._headerDisable === headerDisable)
                return;
            this._headerDisable = headerDisable;
        },
        enumerable: true,
        configurable: true
    });
    TableComponent.prototype.ngAfterViewInit = function () {
        var _this = this;
        this._columnElementsChange$ = this.columnElements.changes
            .merge(this.freezeColumnElements.changes)
            .subscribe(this.onColumnElementsChange, this.onError);
        this.freezeColumnElements.notifyOnChanges();
        this.columnElements.notifyOnChanges();
        setTimeout(function () {
            _this._theadScrollLeftChange$ = _this.theadScrollComponent
                .scrollLeftChange
                .subscribe(function (scrollLeft) {
                _this.tbodyScrollComponent.scrollLeft = scrollLeft;
                _this.tbodyScrollComponent.recalcThumbXPosition();
            });
            _this._tbodyScrollLeftChange$ = _this.tbodyScrollComponent
                .scrollLeftChange
                .subscribe(function (scrollLeft) {
                _this.theadScrollComponent.scrollLeft = scrollLeft;
                _this.theadScrollComponent.recalcThumbXPosition();
            });
            _this._tbodyFreezeScrollTopChange$ = _this.tbodyFreezeScrollComponent
                .scrollTopChange
                .subscribe(function (scrollTop) {
                _this.tbodyScrollComponent.scrollTop = scrollTop;
                _this.tbodyScrollComponent.recalcThumbYPosition();
            });
            _this._tbodyScrollTopChange$ = _this.tbodyScrollComponent
                .scrollTopChange
                .subscribe(function (scrollTop) {
                _this.tbodyFreezeScrollComponent.scrollTop = scrollTop;
                _this.tbodyFreezeScrollComponent.recalcThumbYPosition();
            });
            _this.addHoverClass();
        }, 1);
    };
    TableComponent.prototype.ngAfterContentInit = function () {
        var _this = this;
        this.thTemplate = defaults(this.thTemplate, this.defaultThTemplate);
        this.tdTemplate = defaults(this.tdTemplate, this.defaultTdTemplate);
        console.log(this.columnComponents);
        this.columns = this.columnComponents.toArray(); //.sort((a, b) => +a.isFreeze - +b.isFreeze);
        this.columns.forEach(function (column) {
            if (!column.thTemplate) {
                column.thTemplate = _this.thTemplate;
            }
            if (!column.tdTemplate) {
                column.tdTemplate = _this.tdTemplate;
            }
        });
        this.displayData = this.data;
    };
    TableComponent.prototype.ngOnDestroy = function () {
        this._columnElementsChange$.unsubscribe();
        this._tbodyFreezeScrollTopChange$.unsubscribe();
        this._tbodyScrollTopChange$.unsubscribe();
        this._tbodyScrollLeftChange$.unsubscribe();
        this._theadScrollLeftChange$.unsubscribe();
    };
    TableComponent.prototype.onError = function (err) {
        console.error(err);
    };
    TableComponent.prototype.contains = function (index) {
        // console.log(index, index > (this.page - 1) * this.displayAmount && index <= (this.page - 1) * (1 + this.displayAmount)
        // ? true : false);
        // let back = (this.page - 1) ? (this.page - 1) : 1;
        return index > (this.page - 1) * this.displayAmount && index <= this.page * (this.displayAmount)
            ? true : false;
    };
    TableComponent.prototype.onColumnElementsChange = function () {
        var _this = this;
        setTimeout(function () {
            _this.tbodyScrollComponent.scrollTop = 0;
            _this.tbodyScrollComponent.thumbYPosition = 0;
            _this.tbodyFreezeScrollComponent.scrollTop = 0;
            _this.tbodyFreezeScrollComponent.thumbYPosition = 0;
            _this.recalcColumnWidth(_this.columnComponents.filter(function (column) { return column.isFreeze; }), _this.freezeColumnElements.toArray());
            _this.recalcColumnWidth(_this.columnComponents.filter(function (column) { return !column.isFreeze; }), _this.columnElements.toArray());
            // this.recalcColumnHeight(
            //   this.columnComponents.filter(column => column.isFreeze),
            //   this.freezeColumnElements.toArray()
            // );
            // this.recalcColumnHeight(
            //   this.columnComponents.filter(column => !column.isFreeze),
            //   this.columnElements.toArray()
            // );
            _this.recalcThHeight();
            var lastFreezeColumn = _this.columnComponents.filter(function (column) { return column.isFreeze; }).pop();
            _this.freezeWidth = lastFreezeColumn.left + lastFreezeColumn.width;
            _this.tbodyFreezeScrollComponent.nativeElement.style.width = _this.freezeWidth + "px";
            _this.theadFreezeElement.nativeElement.style.width = _this.freezeWidth + "px";
            _this.addHoverClass();
        }, 1);
    };
    TableComponent.prototype.recalcThHeight = function () {
        var thHeight = 0;
        var freezeCount = this.columnComponents.filter(function (column) { return column.isFreeze; }).length;
        var normalCount = this.columnComponents.filter(function (column) { return !column.isFreeze; }).length;
        var columnElements = this.freezeColumnElements.toArray().slice(0, freezeCount)
            .concat(this.columnElements.toArray().slice(0, normalCount));
        columnElements
            .map(function (columnElement, index) {
            columnElement.nativeElement.style.height = "initial";
            thHeight = Math.max(thHeight, columnElement.nativeElement.offsetHeight);
            return columnElement;
        })
            .map(function (columnElement, index) {
            columnElement.nativeElement.style.height = thHeight + "px";
        });
        this.theadFreezeElement.nativeElement.style.height = thHeight + "px";
        this.theadScrollComponent.nativeElement.style.height = thHeight + "px";
    };
    TableComponent.prototype.recalcColumnWidth = function (columns, elements) {
        var _this = this;
        var colHeight = 0;
        columns.map(function (column) {
            column.left = 0;
            column.width = 0;
        });
        elements.map(function (columnElement, index) {
            _this._renderer.setElementStyle(columnElement.nativeElement, "width", "initial");
            _this._renderer.setElementStyle(columnElement.nativeElement, "height", "initial");
        });
        var cols = columns.length;
        var rows = this.data.length;
        elements.map(function (columnElement, index) {
            var r = ~~(+index / cols);
            var c = +index % cols;
            colHeight = Math.max(colHeight, columnElement.nativeElement.clientHeight);
            columns[c].width = Math.max(columns[c].width, columnElement.nativeElement.clientWidth);
        });
        for (var i = 1; i < columns.length; i++) {
            columns[i].left = columns[i - 1].left + columns[i - 1].width;
        }
        elements.map(function (columnElement, index) {
            var c = +index % cols;
            _this._renderer.setElementStyle(columnElement.nativeElement, "width", columns[c].width + "px");
            _this._renderer.setElementStyle(columnElement.nativeElement, "height", colHeight + "px");
        });
        setTimeout(function () { return _this.resize(); }, 1);
    };
    TableComponent.prototype.recalcColumnHeight = function (columns, elements) {
        var _this = this;
        var colHeight = 0;
        columns.map(function (column) {
            column.top = 0;
            column.height = 0;
        });
        elements.map(function (columnElement, index) {
            _this._renderer.setElementStyle(columnElement.nativeElement, "width", "initial");
        });
        var cols = columns.length;
        var rows = this.data.length;
        elements.map(function (columnElement, index) {
            colHeight = Math.max(colHeight, columnElement.nativeElement.clientHeight);
        });
        elements.map(function (columnElement, index) {
            _this._renderer.setElementStyle(columnElement.nativeElement, "height", colHeight + "px");
        });
        setTimeout(function () { return _this.resize(); }, 1);
    };
    TableComponent.prototype.resize = function () {
        this.tbodyScrollComponent.resize();
        this.theadScrollComponent.resize();
        this.tbodyFreezeScrollComponent.resize();
    };
    TableComponent.prototype.onKeywordChange = function (e) {
        var _this = this;
        this.filteredData = this.data.filter(function (row) {
            return _this.columnComponents.reduce(function (prev, column) {
                if (prev) {
                    return prev;
                }
                if (column.filter instanceof Function) {
                    return column.filter(row[column.field], _this.keyword);
                }
                return false;
            }, false);
        });
        this.sort(this.sortColumn, false);
    };
    TableComponent.prototype.addHoverClass = function () {
        var columns = this.columns.filter(function (column) { return !column.isFreeze; });
        var freezeColumns = this.columns.filter(function (column) { return column.isFreeze; });
        var columnElements = this.columnElements.toArray();
        var freezeColumnElements = this.freezeColumnElements.toArray();
        this.columnElements.map(function (columnElement, i) {
            columnElement.nativeElement.addEventListener("mouseenter", function ($event) {
                var r = Math.floor(i / columns.length);
                var c = i % columns.length;
                columnElements.map(function (columnElement, j) {
                    var _r = Math.floor(j / columns.length);
                    var _c = j % columns.length;
                    toggleClass(columnElement.nativeElement, "hoverRow", _r == r);
                    toggleClass(columnElement.nativeElement, "hoverCol", _c == c);
                });
                freezeColumnElements.map(function (columnElement, j) {
                    var _r = Math.floor(j / freezeColumns.length);
                    var _c = j % freezeColumns.length;
                    toggleClass(columnElement.nativeElement, "hoverRow", _r == r);
                    toggleClass(columnElement.nativeElement, "hoverCol", false);
                });
            });
        });
        this.freezeColumnElements.map(function (columnElement, i) {
            columnElement.nativeElement.addEventListener("mouseenter", function ($event) {
                var r = Math.floor(i / freezeColumns.length);
                var c = i % freezeColumns.length;
                columnElements.map(function (columnElement, j) {
                    var _r = Math.floor(j / columns.length);
                    var _c = j % columns.length;
                    toggleClass(columnElement.nativeElement, "hoverRow", _r == r);
                    toggleClass(columnElement.nativeElement, "hoverCol", false);
                });
                freezeColumnElements.map(function (columnElement, j) {
                    var _r = Math.floor(j / freezeColumns.length);
                    var _c = j % freezeColumns.length;
                    toggleClass(columnElement.nativeElement, "hoverRow", _r == r);
                    toggleClass(columnElement.nativeElement, "hoverCol", _c == c);
                });
            });
        });
    };
    TableComponent.prototype.sort = function (sortColumn, toggle) {
        if (toggle === void 0) { toggle = true; }
        if (!this.columns[sortColumn] || !this.columns[sortColumn].sort) {
            this.displayData = this.filteredData;
            return;
        }
        if (this.sortColumn === sortColumn && toggle) {
            this.sortDirection = !this.sortDirection;
            this.displayData = this.displayData.reverse();
            return;
        }
        this.sortColumn = sortColumn;
        this.sortDirection = true;
        var field = this.columns[sortColumn].field;
        var sortFn = this.columns[sortColumn].sort;
        this.displayData = this.filteredData.sort(function (a, b) { return sortFn(a[field], b[field]); });
    };
    TableComponent.decorators = [
        { type: Component, args: [{
                    selector: 'ay-table',
                    template: "\n    <ng-template #systemDefaultThTemplate=\"\" let-c=\"c\" let-label=\"label\" let-table=\"table\"><div class=\"th\" (click)=\"table.sort(c)\">{{ label }}<div class=\"fa fa-sort-desc\" *ngIf=\"table.sortColumn == c &amp;&amp; sortDirection\"></div><div class=\"fa fa-sort-asc\" *ngIf=\"table.sortColumn == c &amp;&amp; !sortDirection\"></div></div></ng-template><ng-template #systemDefaultTdTemplate=\"\" let-c=\"c\" let-column=\"column\" let-field=\"field\" let-r=\"r\" let-row=\"row\" let-table=\"table\"><ng-template [ngIf]=\"column.format\" [ngIfElse]=\"elseElement\" [ngIfThen]=\"thenElement\"></ng-template><ng-template #thenElement=\"\">{{ row[field] | format: column.format }}</ng-template><ng-template #elseElement=\"\">{{ row[field] }}</ng-template></ng-template><ay-input [(data)]=\"keyword\" [show]=\"!filterDisable\" (change)=\"onKeywordChange()\" placeholder=\"\u641C\u5C0B\u8868\u683C\" icon=\"fa-search\"></ay-input><div class=\"table\"><div class=\"thead\" [show]=\"!headerDisable\"><div class=\"freeze\" #theadFreezeElement=\"\"><ng-template [ngForOf]=\"columns\" let-c=\"index\" let-column=\"\" ngFor=\"\"><ng-template [ngIf]=\"column.isFreeze\"><div class=\"th-wrapper\" #freezeColumnElements=\"\"><ng-template [ngTemplateOutlet]=\"column.thTemplate\" [ngOutletContext]=\"{ label: column.label, field: column.field, table: table, c: c }\"></ng-template></div></ng-template></ng-template></div><ay-scroll class=\"flex\" #theadScrollComponent=\"\" showX=\"false\" showY=\"false\" scrollY=\"false\"><ng-template [ngForOf]=\"columns\" let-c=\"index\" let-column=\"\" ngFor=\"\"><ng-template [ngIf]=\"!column.isFreeze\"><div class=\"th-wrapper\" #columnElement=\"\"><ng-template [ngTemplateOutlet]=\"column.thTemplate\" [ngOutletContext]=\"{ label: column.label, field: column.field, table: table, c: c }\"></ng-template></div></ng-template></ng-template></ay-scroll></div><div class=\"tbody\"><ay-scroll class=\"freeze\" #tbodyFreezeScrollComponent=\"\" showX=\"false\" showY=\"false\" scrollX=\"false\"><div class=\"tr\" *ngFor=\"let row of displayData; let r=index\"><ng-template [ngForOf]=\"columns\" let-c=\"index\" let-column=\"\" ngFor=\"\"><ng-template [ngIf]=\"column.isFreeze &amp;&amp; contains(r)\"><div class=\"td-wrapper\" #freezeColumnElements=\"\"><ng-template [ngTemplateOutlet]=\"column.tdTemplate\" [ngOutletContext]=\"{ row: row, column: column, field: column.field, table: table, r: r, c: c }\"></ng-template></div></ng-template></ng-template></div></ay-scroll><ay-scroll class=\"flex\" #tbodyScrollComponent=\"\"><div class=\"tr\" *ngFor=\"let row of displayData; let r=index\"><ng-template [ngForOf]=\"columns\" let-c=\"index\" let-column=\"\" ngFor=\"\"><ng-template [ngIf]=\"!column.isFreeze &amp;&amp; contains(r)\"><div class=\"td-wrapper\" #columnElement=\"\"><ng-template [ngTemplateOutlet]=\"column.tdTemplate\" [ngOutletContext]=\"{ row: row, column: column, field: column.field, table: table, r: r, c: c }\"></ng-template></div></ng-template></ng-template></div></ay-scroll></div></div>\n  ",
                    styles: ["\n    ay-table {\n      margin: 8px 12px; }\n      ay-table .table {\n        box-shadow: 0 1px 7px rgba(0, 0, 0, 0.05), 0 7px 17px rgba(0, 0, 0, 0.1); }\n      ay-table ay-input {\n        margin: 0; }\n      ay-table .td-wrapper,\n      ay-table .th-wrapper {\n        display: inline-block;\n        box-sizing: border-box;\n        vertical-align: top;\n        line-height: 1.5em;\n        padding: .25em .5em;\n        color: #333; }\n        ay-table .td-wrapper.hoverRow, ay-table .td-wrapper.hoverCol,\n        ay-table .th-wrapper.hoverRow,\n        ay-table .th-wrapper.hoverCol {\n          background-color: #EEE;\n          color: #000; }\n        ay-table .td-wrapper.hoverRow.hoverCol,\n        ay-table .th-wrapper.hoverRow.hoverCol {\n          background-color: #DDD; }\n      ay-table .thead {\n        height: 30px;\n        background-color: #F2F2F2; }\n        ay-table .thead .freeze {\n          background-color: #F2F2F2;\n          box-shadow: 0 1px 7px rgba(0, 0, 0, 0.05), 0 7px 17px rgba(0, 0, 0, 0.1);\n          z-index: 2;\n          vertical-align: top;\n          position: relative; }\n        ay-table .thead .flex {\n          background-color: #F2F2F2;\n          box-shadow: 0 1px 7px rgba(0, 0, 0, 0.05), 0 7px 17px rgba(0, 0, 0, 0.1);\n          z-index: 1;\n          vertical-align: top;\n          position: relative; }\n      ay-table .tbody {\n        overflow: hidden;\n        background-color: #F2F2F2; }\n        ay-table .tbody .freeze {\n          box-shadow: 0 1px 7px rgba(0, 0, 0, 0.05), 0 7px 17px rgba(0, 0, 0, 0.1);\n          z-index: 1;\n          vertical-align: top; }\n      ay-table .th .fa {\n        float: right;\n        line-height: 1.5em;\n        color: #666; }\n      ay-table .thead,\n      ay-table .tbody {\n        display: inline-block;\n        display: flex;\n        flex-direction: row; }\n        ay-table .thead .freeze,\n        ay-table .tbody .freeze {\n          display: inline-block; }\n        ay-table .thead .flex,\n        ay-table .tbody .flex {\n          flex: 1; }\n      ay-table .disable {\n        display: none; }\n  "],
                    encapsulation: ViewEncapsulation.None
                },] },
    ];
    /** @nocollapse */
    TableComponent.ctorParameters = function () { return [
        { type: Renderer, },
        { type: NgZone, },
    ]; };
    TableComponent.propDecorators = {
        'page': [{ type: Input },],
        'displayAmount': [{ type: Input },],
        'keywordChange': [{ type: Output },],
        'keyword': [{ type: Input },],
        'freezeWidthChange': [{ type: Output },],
        'freezeWidth': [{ type: Input },],
        'thHeightChange': [{ type: Output },],
        'thHeight': [{ type: Input },],
        'filteredDataChange': [{ type: Output },],
        'filteredData': [{ type: Input },],
        'dataChange': [{ type: Output },],
        'data': [{ type: Input },],
        'filterDisable': [{ type: Input },],
        'headerDisable': [{ type: Input },],
        'columnComponents': [{ type: ContentChildren, args: [ColumnComponent,] },],
        'defaultThTemplate': [{ type: ViewChild, args: ["systemDefaultThTemplate",] },],
        'thTemplate': [{ type: ContentChild, args: ["defaultThTemplate",] },],
        'defaultTdTemplate': [{ type: ViewChild, args: ["systemDefaultTdTemplate",] },],
        'tdTemplate': [{ type: ContentChild, args: ["defaultTdTemplate",] },],
        'columnElements': [{ type: ViewChildren, args: ["columnElement",] },],
        'freezeColumnElements': [{ type: ViewChildren, args: ["freezeColumnElements",] },],
        'theadScrollComponent': [{ type: ViewChild, args: ["theadScrollComponent",] },],
        'theadFreezeElement': [{ type: ViewChild, args: ["theadFreezeElement",] },],
        'tbodyFreezeScrollComponent': [{ type: ViewChild, args: ["tbodyFreezeScrollComponent",] },],
        'tbodyScrollComponent': [{ type: ViewChild, args: ["tbodyScrollComponent",] },],
    };
    __decorate([
        bind
    ], TableComponent.prototype, "contains", null);
    __decorate([
        bind
    ], TableComponent.prototype, "onColumnElementsChange", null);
    __decorate([
        bind
    ], TableComponent.prototype, "resize", null);
    __decorate([
        bind
    ], TableComponent.prototype, "onKeywordChange", null);
    __decorate([
        bind
    ], TableComponent.prototype, "addHoverClass", null);
    __decorate([
        bind
    ], TableComponent.prototype, "sort", null);
    return TableComponent;
}());
export { TableComponent };
//# sourceMappingURL=table.component.js.map