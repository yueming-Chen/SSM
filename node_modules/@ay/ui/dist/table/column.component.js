import { Input, Component, ElementRef, ContentChild, ViewContainerRef } from "@angular/core";
import { TableFilter } from "./filter";
import { TableSort } from "./sort";
var ColumnComponent = (function () {
    //- 事件函數
    function ColumnComponent(viewContainer, elementRef) {
        this.viewContainer = viewContainer;
        this.elementRef = elementRef;
        this.label = null;
        this.field = null;
        /** sort */
        this._sort = "string";
        /** filter */
        this._filter = "string";
        this.format = null;
        this.isFreeze = null;
        /** Th */
        this.thTemplate = null;
        /** Td */
        this.tdTemplate = null;
    }
    Object.defineProperty(ColumnComponent.prototype, "sort", {
        get: function () {
            if (typeof this._sort === "string") {
                return TableSort[this._sort];
            }
            return this._sort;
        },
        set: function (sort) {
            if (this._sort === sort)
                return;
            this._sort = sort;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ColumnComponent.prototype, "filter", {
        get: function () {
            if (typeof this._filter === "string") {
                return TableFilter[this._filter];
            }
            return this._filter;
        },
        set: function (filter) {
            if (this._filter === filter)
                return;
            this._filter = filter;
        },
        enumerable: true,
        configurable: true
    });
    ColumnComponent.decorators = [
        { type: Component, args: [{
                    selector: "ay-column",
                    template: ""
                },] },
    ];
    /** @nocollapse */
    ColumnComponent.ctorParameters = function () { return [
        { type: ViewContainerRef, },
        { type: ElementRef, },
    ]; };
    ColumnComponent.propDecorators = {
        'label': [{ type: Input },],
        'field': [{ type: Input },],
        'sort': [{ type: Input },],
        'filter': [{ type: Input },],
        'format': [{ type: Input },],
        'isFreeze': [{ type: Input, args: ["freeze",] },],
        'thTemplate': [{ type: ContentChild, args: ["thTemplate",] },],
        'tdTemplate': [{ type: ContentChild, args: ["tdTemplate",] },],
        'column': [{ type: Input },],
    };
    return ColumnComponent;
}());
export { ColumnComponent };
//# sourceMappingURL=column.component.js.map