import { Subject } from "rxjs/Rx";
export declare class Color {
    /** red */
    private _red;
    redChange: Subject<number>;
    red: number;
    /** green */
    private _green;
    greenChange: Subject<number>;
    green: number;
    /** blue */
    private _blue;
    blueChange: Subject<number>;
    blue: number;
    /** hex */
    private _hex;
    hexChange: Subject<string>;
    hex: string;
    /** h */
    private _hue;
    hueChange: Subject<number>;
    hue: number;
    /** saturation */
    private _saturation;
    saturationChange: Subject<number>;
    saturation: number;
    /** brightness */
    private _brightness;
    brightnessChange: Subject<number>;
    brightness: number;
    constructor();
    onRGBChange(): void;
    onHSBChange(): void;
    onHexChange(): void;
    onError(err: any): void;
    static RGBtoHEX(red: number, green: number, blue: number): string;
    static HEXtoRGB(hex: string): {
        red: number;
        green: number;
        blue: number;
    };
    static HSBtoRGB(hue: number, saturation: number, brightness: number): {
        red: number;
        green: number;
        blue: number;
    };
    static RGBtoHSB(red: number, green: number, blue: number): {
        hue: number;
        saturation: number;
        brightness: number;
    };
    static HEXtoHSB(hex: string): {
        hue: number;
        saturation: number;
        brightness: number;
    };
    static HSBtoHEX(hue: number, saturation: number, brightness: number): string;
    static setBrightness(red: any, green: any, blue: any, Z: any): {
        red: any;
        green: any;
        blue: any;
    };
    static isLight(red: any, green: any, blue: any): boolean;
    static adjustColorLevel(hex: string, level: number): string;
}
