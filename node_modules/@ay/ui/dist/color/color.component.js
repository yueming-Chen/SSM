//- 需要重構
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import { Component, Input, Output, EventEmitter, ViewChild, ViewEncapsulation } from '@angular/core';
import { DomSanitizer } from '@angular/platform-browser';
import { Observable } from "rxjs";
import { bind } from "@ay/util/dist";
var ColorComponent = (function () {
    function ColorComponent(sanitizer) {
        var _this = this;
        this.sanitizer = sanitizer;
        /** mode */
        this._mode = 'R';
        this.modeChange = new EventEmitter();
        this.dataChange = new EventEmitter();
        this.hsb = new HSB();
        this.rgb = new RGB();
        this.isAbsorb = false;
        this.hsbSubscription = this.hsb.observable
            .filter(function (hsb) { return hsb.bindingFlag; })
            .subscribe(function (hsb) {
            _this.rgb.bindingFlag = false;
            var rgb = hsb.toRGB();
            _this.rgb.r = rgb.r;
            _this.rgb.g = rgb.g;
            _this.rgb.b = rgb.b;
            _this.rgb.bindingFlag = true;
        });
        this.rgbSubscription = this.rgb.observable
            .filter(function (rgb) { return rgb.bindingFlag; })
            .subscribe(function (rgb) {
            _this.hsb.bindingFlag = false;
            var hsb = rgb.toHSB();
            _this.hsb.h = hsb.h;
            _this.hsb.s = hsb.s;
            _this.hsb.b = hsb.b;
            _this.data = _this.rgb.hex;
            _this.hsb.bindingFlag = true;
        });
    }
    Object.defineProperty(ColorComponent.prototype, "mode", {
        get: function () {
            return this._mode;
        },
        set: function (mode) {
            if (this._mode === mode)
                return;
            this._mode = mode;
            this.modeChange.emit(this._mode);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ColorComponent.prototype, "data", {
        get: function () {
            return this._data;
        },
        set: function (data) {
            if (this._data === data)
                return;
            this._data = data;
            this.dataChange.emit(this._data);
        },
        enumerable: true,
        configurable: true
    });
    ColorComponent.prototype.startAbsorb = function ($event) {
        this.isAbsorb = true;
        this.absorb($event);
        window.addEventListener("mouseup", this.endAbsorb);
        window.addEventListener("mousemove", this.absorb);
    };
    // @HostListener("window:mouseup")
    ColorComponent.prototype.endAbsorb = function () {
        this.isAbsorb = false;
        window.removeEventListener("mouseup");
        window.removeEventListener("mousemove");
    };
    // @HostListener("window:mousemove", ['$event'])
    ColorComponent.prototype.absorb = function ($event) {
        if (!this.isAbsorb)
            return;
        var nel;
        switch (this.mode) {
            case 'R':
                nel = this.pickerR.nativeElement;
                break;
            case 'G':
                nel = this.pickerG.nativeElement;
                break;
            case 'B':
                nel = this.pickerB.nativeElement;
                break;
            case 'H':
                nel = this.pickerH.nativeElement;
                break;
            case 'S':
                nel = this.pickerS.nativeElement;
                break;
            case 'B2':
                nel = this.pickerB2.nativeElement;
                break;
        }
        var rect = nel.getBoundingClientRect();
        var l = Math.min(Math.max($event.clientX - rect.left, 0), rect.width) / rect.width;
        var t = Math.min(Math.max($event.clientY - rect.top, 0), rect.height) / rect.height;
        switch (this.mode) {
            case 'R':
                this.rgb.b = Math.round(l * 255);
                this.rgb.g = Math.round((1 - t) * 255);
                break;
            case 'G':
                this.rgb.r = Math.round((1 - l) * 255);
                this.rgb.b = Math.round(t * 255);
                break;
            case 'B':
                this.rgb.r = Math.round(l * 255);
                this.rgb.g = Math.round((1 - t) * 255);
                break;
            case 'H':
                this.hsb.s = Math.round(l * 100);
                this.hsb.b = Math.round((1 - t) * 100);
                break;
            case 'S':
                this.hsb.h = Math.round(l * 360);
                this.hsb.b = Math.round((1 - t) * 100);
                break;
            case 'B2':
                this.hsb.h = Math.round(l * 360);
                this.hsb.s = Math.round((1 - t) * 100);
                break;
        }
    };
    ColorComponent.prototype.ngAfterViewInit = function () { };
    ColorComponent.prototype.ngOnDestroy = function () {
        this.hsbSubscription.unsubscribe();
        this.rgbSubscription.unsubscribe();
    };
    ColorComponent.prototype.ngAfterViewChecked = function () {
    };
    ColorComponent.decorators = [
        { type: Component, args: [{
                    selector: 'ay-color',
                    template: "\n    <div class=\"picker\"><div class=\"group\" [ngSwitch]=\"mode\"><div class=\"case\" *ngSwitchCase=\"'R'\"><div class=\"r\" #pickerR=\"\" [style.background]=\"sanitizer.bypassSecurityTrustStyle(rgb.gb)\" (mousedown)=\"startAbsorb($event)\" (mousemove)=\"absorb($event)\"><div class=\"thumb\" [style.background]=\"rgb.rgb\" [style.left.%]=\"rgb.b/255*100\" [style.top.%]=\"100-rgb.g/255*100\"></div></div></div><div class=\"case\" *ngSwitchCase=\"'G'\"><div class=\"g\" #pickerG=\"\" [style.background]=\"sanitizer.bypassSecurityTrustStyle(rgb.rb)\" (mousedown)=\"startAbsorb($event)\" (mousemove)=\"absorb($event)\"><div class=\"thumb\" [style.background]=\"rgb.rgb\" [style.left.%]=\"100-rgb.r/255*100\" [style.top.%]=\"rgb.b/255*100\"></div></div></div><div class=\"case\" *ngSwitchCase=\"'B'\"><div class=\"b\" #pickerB=\"\" [style.background]=\"sanitizer.bypassSecurityTrustStyle(rgb.rg)\" (mousedown)=\"startAbsorb($event)\" (mousemove)=\"absorb($event)\"><div class=\"thumb\" [style.background]=\"rgb.rgb\" [style.left.%]=\"rgb.r/255*100\" [style.top.%]=\"100-rgb.g/255*100\"></div></div></div><div class=\"case\" *ngSwitchCase=\"'H'\"><div class=\"h\" #pickerH=\"\" [style.background]=\"sanitizer.bypassSecurityTrustStyle(hsb.sb)\" (mousedown)=\"startAbsorb($event)\" (mousemove)=\"absorb($event)\"><div class=\"thumb\" [style.background]=\"hsb.hsl\" [style.left.%]=\"hsb.s\" [style.top.%]=\"100-hsb.b\"></div></div></div><div class=\"case\" *ngSwitchCase=\"'S'\"><div class=\"s\" #pickerS=\"\" [style.background]=\"sanitizer.bypassSecurityTrustStyle(hsb.hb)\" (mousedown)=\"startAbsorb($event)\" (mousemove)=\"absorb($event)\"><div class=\"thumb\" [style.background]=\"hsb.hsl\" [style.left.%]=\"hsb.h/360*100\" [style.top.%]=\"100-hsb.b\"></div></div></div><div class=\"case\" *ngSwitchCase=\"'B2'\"><div class=\"b\" #pickerB2=\"\" [style.background]=\"sanitizer.bypassSecurityTrustStyle(hsb.hs)\" (mousedown)=\"startAbsorb($event)\" (mousemove)=\"absorb($event)\"><div class=\"thumb\" [style.background]=\"hsb.hsl\" [style.left.%]=\"hsb.h/360*100\" [style.top.%]=\"100-hsb.s\"></div></div></div></div></div><div class=\"attrs\"><div class=\"group rgb\"><div class=\"attr\" (mousedown)=\"mode = 'R'\"><div class=\"fa\" [ngClass]=\"{ 'fa-caret-right': mode == 'R', 'fa-circle-o2' : mode !== 'R' }\"></div><div class=\"label\">R</div><ay-slider [(data)]=\"rgb.r\" [thumbBackground]=\"rgb.rgb\" [trackBackground]=\"rgb.rSlider\" slider min=\"0\" max=\"255\"></ay-slider><input [(ngModel)]=\"rgb.r\" [max]=\"255\" [min]=\"0\"><div class=\"post\"></div></div><div class=\"attr\" (mousedown)=\"mode = 'G'\"><div class=\"fa\" [ngClass]=\"{ 'fa-caret-right': mode == 'G', 'fa-circle-o2' : mode !== 'G' }\"></div><div class=\"label\">G</div><ay-slider [(data)]=\"rgb.g\" [thumbBackground]=\"rgb.rgb\" [trackBackground]=\"rgb.gSlider\" slider min=\"0\" max=\"255\"></ay-slider><input [(ngModel)]=\"rgb.g\" [max]=\"255\" [min]=\"0\"><div class=\"post\"></div></div><div class=\"attr\" (mousedown)=\"mode = 'B'\"><div class=\"fa\" [ngClass]=\"{ 'fa-caret-right': mode == 'B', 'fa-circle-o2' : mode !== 'B' }\"></div><div class=\"label\">B</div><ay-slider [(data)]=\"rgb.b\" [thumbBackground]=\"rgb.rgb\" [trackBackground]=\"rgb.bSlider\" slider min=\"0\" max=\"255\"></ay-slider><input [(ngModel)]=\"rgb.b\" [max]=\"255\" [min]=\"0\"><div class=\"post\"></div></div></div><div class=\"group hsb\"><div class=\"attr\" (mousedown)=\"mode = 'H'\"><div class=\"fa\" [ngClass]=\"{ 'fa-caret-right': mode == 'H', 'fa-circle-o2' : mode !== 'H' }\"></div><div class=\"label\">H</div><ay-slider [(data)]=\"hsb.h\" [thumbBackground]=\"hsb.hsl\" [trackBackground]=\"hsb.hSlider\" slider min=\"0\" max=\"360\"></ay-slider><input [(ngModel)]=\"hsb.h\" [max]=\"360\" [min]=\"0\"><div class=\"post\">\u00BA</div></div><div class=\"attr\" (mousedown)=\"mode = 'S'\"><div class=\"fa\" [ngClass]=\"{ 'fa-caret-right': mode == 'S', 'fa-circle-o2' : mode !== 'S' }\"></div><div class=\"label\">S</div><ay-slider [(data)]=\"hsb.s\" [thumbBackground]=\"hsb.hsl\" [trackBackground]=\"hsb.sSlider\" slider min=\"0\" max=\"100\"></ay-slider><input [(ngModel)]=\"hsb.s\" [max]=\"100\" [min]=\"0\"><div class=\"post\">%</div></div><div class=\"attr\" (mousedown)=\"mode = 'B2'\"><div class=\"fa\" [ngClass]=\"{ 'fa-caret-right': mode == 'B2', 'fa-circle-o2' : mode !== 'B2' }\"></div><div class=\"label\">B</div><ay-slider [(data)]=\"hsb.b\" [thumbBackground]=\"hsb.hsl\" [trackBackground]=\"hsb.bSlider\" slider min=\"0\" max=\"100\"></ay-slider><input [(ngModel)]=\"hsb.b\" [max]=\"100\" [min]=\"0\"><div class=\"post\">%</div></div></div><div class=\"group hex\" [ngClass]=\"{ error : rgb.hexError }\"><div class=\"attr\"><div class=\"fa\"></div><div class=\"label\">HEX</div><input [(ngModel)]=\"rgb.hex\" placeholder=\"#004081\"></div></div></div>\n  ",
                    styles: ["\n    @charset \"UTF-8\";\n    ay-color {\n      box-shadow: 0 1px 7px rgba(0, 0, 0, 0.05), 0 7px 17px rgba(0, 0, 0, 0.1);\n      display: inline-flex;\n      background-color: #FFF;\n      margin: 10px;\n      padding: 10px;\n      flex-direction: row;\n      user-select: none; }\n      ay-color .picker {\n        position: relative;\n        cursor: pointer;\n        height: 17em; }\n        ay-color .picker .r,\n        ay-color .picker .g,\n        ay-color .picker .b,\n        ay-color .picker .h,\n        ay-color .picker .s,\n        ay-color .picker .l {\n          display: inline-block;\n          position: relative;\n          border-radius: 4px;\n          width: 17em;\n          height: 17em;\n          background-blend-mode: screen; }\n        ay-color .picker .h,\n        ay-color .picker .s,\n        ay-color .picker .l {\n          background-blend-mode: inherit; }\n        ay-color .picker .thumb {\n          box-shadow: 0 1px 7px rgba(0, 0, 0, 0.05), 0 7px 17px rgba(0, 0, 0, 0.1);\n          width: 20px;\n          height: 20px;\n          border-radius: 100%;\n          border: 1px solid #FFF;\n          transform: translate(-10px) translateY(-10px);\n          background-color: #F2F2F2; }\n      ay-color .group .r,\n      ay-color .group .g,\n      ay-color .group .b,\n      ay-color .group .h,\n      ay-color .group .s,\n      ay-color .group .b2 {\n        position: relative; }\n        ay-color .group .r .thumb,\n        ay-color .group .g .thumb,\n        ay-color .group .b .thumb,\n        ay-color .group .h .thumb,\n        ay-color .group .s .thumb,\n        ay-color .group .b2 .thumb {\n          position: absolute; }\n      ay-color .attrs {\n        padding-left: 20px; }\n        ay-color .attrs .group {\n          margin-bottom: 1em; }\n          ay-color .attrs .group:last-child {\n            margin-bottom: 0; }\n          ay-color .attrs .group .attr {\n            margin-bottom: .5em; }\n            ay-color .attrs .group .attr .fa,\n            ay-color .attrs .group .attr .label {\n              display: inline-block;\n              color: #333; }\n            ay-color .attrs .group .attr .label {\n              width: 3em;\n              line-height: 1.5em;\n              font-size: 1em;\n              margin-right: 12px;\n              vertical-align: top;\n              text-align: center;\n              cursor: pointer; }\n            ay-color .attrs .group .attr .fa {\n              line-height: 1.5em;\n              cursor: pointer;\n              width: .5em;\n              vertical-align: top; }\n            ay-color .attrs .group .attr input {\n              display: inline-block;\n              width: 3em;\n              font-size: 1em;\n              border: 1px solid transparent;\n              padding: 0em .5em;\n              margin-left: 1em;\n              line-height: 1.5em;\n              vertical-align: top;\n              outline: none;\n              background-color: transparent; }\n              ay-color .attrs .group .attr input:focus {\n                box-shadow: 0 1px 7px rgba(0, 0, 0, 0.05), 0 7px 17px rgba(0, 0, 0, 0.1); }\n            ay-color .attrs .group .attr ay-slider {\n              margin-left: .5em;\n              margin-top: .5em;\n              margin-bottom: .5em;\n              width: 150px; }\n              ay-color .attrs .group .attr ay-slider .thumb {\n                height: 1.5em; }\n            ay-color .attrs .group .attr .post {\n              display: inline-block;\n              width: 20px;\n              font-size: 1em;\n              line-height: 1.5em;\n              vertical-align: top;\n              margin-left: .5em;\n              color: #333; }\n          ay-color .attrs .group.hex .attr {\n            position: relative; }\n            ay-color .attrs .group.hex .attr input {\n              box-sizing: border-box;\n              font-size: 1em;\n              padding: 0 .5em;\n              padding-right: 6em;\n              line-height: 1.5em;\n              margin-left: 0;\n              width: auto;\n              border: none; }\n      ay-color .hex.error .attr:after {\n        display: block;\n        position: absolute;\n        top: 0;\n        right: 3em;\n        content: \"\u683C\u5F0F\u932F\u8AA4\";\n        font-size: 1em;\n        background: #E70000;\n        color: #FFF;\n        padding: 0 .25em;\n        height: 1.5em;\n        line-height: 1.5em; }\n  "],
                    encapsulation: ViewEncapsulation.None
                },] },
    ];
    /** @nocollapse */
    ColorComponent.ctorParameters = function () { return [
        { type: DomSanitizer, },
    ]; };
    ColorComponent.propDecorators = {
        'pickerR': [{ type: ViewChild, args: ["pickerR",] },],
        'pickerG': [{ type: ViewChild, args: ["pickerG",] },],
        'pickerB': [{ type: ViewChild, args: ["pickerB",] },],
        'pickerH': [{ type: ViewChild, args: ["pickerH",] },],
        'pickerS': [{ type: ViewChild, args: ["pickerS",] },],
        'pickerB2': [{ type: ViewChild, args: ["pickerB2",] },],
        'modeChange': [{ type: Output },],
        'mode': [{ type: Input },],
        'dataChange': [{ type: Output },],
        'data': [{ type: Input },],
    };
    __decorate([
        bind
    ], ColorComponent.prototype, "endAbsorb", null);
    __decorate([
        bind
    ], ColorComponent.prototype, "absorb", null);
    return ColorComponent;
}());
export { ColorComponent };
var HSB = (function () {
    function HSB() {
        var _this = this;
        this.observable = Observable.create(function (observer) { return _this.observer = observer; }).publish();
        this.bindingFlag = true;
        this.hSlider = "";
        this.sSlider = "";
        this.bSlider = "";
        this.sb = "";
        this.hb = "";
        this.hs = "";
        this._h = 0;
        this._s = 100;
        this._b = 100;
        this.updateSlider();
        this.observable.connect();
        this.observable.debounceTime(10).subscribe(function (hsl) { return hsl.updateSlider(); });
    }
    Object.defineProperty(HSB.prototype, "h", {
        get: function () {
            return this._h;
        },
        set: function (h) {
            if (h > 360)
                h = 360;
            else if (h < 0)
                h = 0;
            if (h == this._h)
                return;
            this._h = h;
            if (this.observer)
                this.observer.next(this);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(HSB.prototype, "s", {
        get: function () {
            return this._s;
        },
        set: function (s) {
            if (s > 100)
                s = 100;
            else if (s < 0)
                s = 0;
            if (s == this._s)
                return;
            this._s = s;
            if (this.observer)
                this.observer.next(this);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(HSB.prototype, "b", {
        get: function () {
            return this._b;
        },
        set: function (b) {
            if (b > 100)
                b = 100;
            else if (b < 0)
                b = 0;
            if (b == this._b)
                return;
            this._b = b;
            if (this.observer)
                this.observer.next(this);
        },
        enumerable: true,
        configurable: true
    });
    HSB.prototype.updateSlider = function () {
        this.hSlider = ("\n      -webkit-linear-gradient(left,\n        " + HSB.toHSL(36 * 0, this._s, this._b) + ",\n        " + HSB.toHSL(36 * 1, this._s, this._b) + ",\n        " + HSB.toHSL(36 * 2, this._s, this._b) + ",\n        " + HSB.toHSL(36 * 3, this._s, this._b) + ",\n        " + HSB.toHSL(36 * 4, this._s, this._b) + ",\n        " + HSB.toHSL(36 * 5, this._s, this._b) + ",\n        " + HSB.toHSL(36 * 6, this._s, this._b) + ",\n        " + HSB.toHSL(36 * 7, this._s, this._b) + ",\n        " + HSB.toHSL(36 * 8, this._s, this._b) + ",\n        " + HSB.toHSL(36 * 9, this._s, this._b) + ",\n        " + HSB.toHSL(36 * 10, this._s, this._b) + "\n      )").replace(/\s+/ig, " ");
        this.sSlider = "\n      -webkit-linear-gradient(left,\n        " + HSB.toHSL(this._h, 0, this._b) + ",\n        " + HSB.toHSL(this._h, 100, this._b) + "\n      )";
        this.bSlider = "\n      -webkit-linear-gradient(left,\n        " + HSB.toHSL(this._h, this._s, 0) + ",\n        " + HSB.toHSL(this._h, this._s, 100) + "\n      )";
        this.sb = ("\n      -webkit-linear-gradient(top,\n        " + HSB.toHSL(this._h, 0, 0, 0) + ",\n        " + HSB.toHSL(this._h, 100, 0, 1) + "\n      ),\n      -webkit-linear-gradient(left,\n        " + HSB.toHSL(this._h, 100, 0, 0) + ",\n        " + HSB.toHSL(this._h, 100, 100) + "\n      )\n    ").replace(/\s+/ig, " ");
        this.hb = ("\n      -webkit-linear-gradient(top,\n        " + HSB.toHSL(0, this._s, 100, 0) + ",\n        " + HSB.toHSL(0, this._s, 0, 1) + "\n      ),\n      -webkit-linear-gradient(left,\n        " + HSB.toHSL(36 * 0, this._s, 100, 1) + ",\n        " + HSB.toHSL(36 * 1, this._s, 100, 1) + ",\n        " + HSB.toHSL(36 * 2, this._s, 100, 1) + ",\n        " + HSB.toHSL(36 * 3, this._s, 100, 1) + ",\n        " + HSB.toHSL(36 * 4, this._s, 100, 1) + ",\n        " + HSB.toHSL(36 * 5, this._s, 100, 1) + ",\n        " + HSB.toHSL(36 * 6, this._s, 100, 1) + ",\n        " + HSB.toHSL(36 * 7, this._s, 100, 1) + ",\n        " + HSB.toHSL(36 * 8, this._s, 100, 1) + ",\n        " + HSB.toHSL(36 * 9, this._s, 100, 1) + ",\n        " + HSB.toHSL(36 * 10, this._s, 100, 1) + "\n      )\n    ").replace(/\s+/ig, " ");
        this.hs = ("\n      -webkit-linear-gradient(left,\n        " + HSB.toHSL(36 * 0, 100, this._b, 1) + ",\n        " + HSB.toHSL(36 * 1, 100, this._b, 1) + ",\n        " + HSB.toHSL(36 * 2, 100, this._b, 1) + ",\n        " + HSB.toHSL(36 * 3, 100, this._b, 1) + ",\n        " + HSB.toHSL(36 * 4, 100, this._b, 1) + ",\n        " + HSB.toHSL(36 * 5, 100, this._b, 1) + ",\n        " + HSB.toHSL(36 * 6, 100, this._b, 1) + ",\n        " + HSB.toHSL(36 * 7, 100, this._b, 1) + ",\n        " + HSB.toHSL(36 * 8, 100, this._b, 1) + ",\n        " + HSB.toHSL(36 * 9, 100, this._b, 1) + ",\n        " + HSB.toHSL(36 * 10, 100, this._b, 1) + "\n      ),\n      -webkit-linear-gradient(top,\n        " + HSB.toHSL(0, 100, this._b, 0) + ",\n        " + HSB.toHSL(0, 0, this._b, 1) + "\n      )\n    ").replace(/\s+/ig, " ");
        this.hsl = this.toHSL();
    };
    HSB.toHSL = function (h, s, b, a) {
        if (a === void 0) { a = 1; }
        s /= 100;
        b /= 100;
        var l = (2 - s) * b / 2;
        s = l && l < 1 ? s * b / (l < 0.5 ? l * 2 : 2 - l * 2) : s;
        return "hsla(" + h + ", " + s * 100 + "%, " + l * 100 + "%, " + a + ")";
    };
    HSB.toRGB = function (h, s, b) {
        s /= 100;
        b /= 100;
        var R, G, B, X, C;
        h = (h % 360) / 60;
        C = b * s;
        X = C * (1 - Math.abs(h % 2 - 1));
        R = G = B = b - C;
        h = ~~h;
        R += [C, X, 0, 0, X, C][h];
        G += [X, C, C, X, 0, 0][h];
        B += [0, 0, X, C, C, X][h];
        return {
            r: Math.round(R * 255),
            g: Math.round(G * 255),
            b: Math.round(B * 255)
        };
    };
    HSB.prototype.toRGB = function () {
        return HSB.toRGB(this.h, this.s, this.b);
    };
    HSB.prototype.toHSL = function () {
        return HSB.toHSL(this.h, this.s, this.b);
    };
    return HSB;
}());
export { HSB };
var RGB = (function () {
    function RGB() {
        var _this = this;
        this.observable = Observable.create(function (observer) { return _this.observer = observer; }).publish();
        this.bindingFlag = true;
        // public hex: string;
        this.rSlider = "";
        this.gSlider = "";
        this.bSlider = "";
        this.gb = "";
        this.rb = "";
        this.rg = "";
        this.hexError = false;
        this._r = 0;
        this._g = 100;
        this._b = 50;
        this.hexChange = new EventEmitter();
        this.updateSlider();
        this.observable.connect();
        this.observable
            .debounceTime(10)
            .subscribe(function (rgb) {
            rgb.updateSlider();
            _this.hex = _this.toHex();
        });
    }
    Object.defineProperty(RGB.prototype, "r", {
        get: function () {
            return this._r;
        },
        set: function (r) {
            if (r > 255)
                r = 255;
            else if (r < 0)
                r = 0;
            if (r == this._r)
                return;
            this._r = r;
            if (this.observer)
                this.observer.next(this);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RGB.prototype, "g", {
        get: function () {
            return this._g;
        },
        set: function (g) {
            if (g > 255)
                g = 255;
            else if (g < 0)
                g = 0;
            if (g == this._g)
                return;
            this._g = g;
            if (this.observer)
                this.observer.next(this);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RGB.prototype, "b", {
        get: function () {
            return this._b;
        },
        set: function (b) {
            if (b > 255)
                b = 255;
            else if (b < 0)
                b = 0;
            if (b == this._b)
                return;
            this._b = b;
            if (this.observer)
                this.observer.next(this);
        },
        enumerable: true,
        configurable: true
    });
    RGB.prototype.updateSlider = function () {
        this.rSlider = "-webkit-linear-gradient(left, rgb(0, " + this._g + ", " + this._b + ") 0%, rgb(255, " + this._g + ", " + this._b + ") 100%)";
        this.gSlider = "-webkit-linear-gradient(left, rgb(" + this._r + ", 0, " + this._b + ") 0%, rgb(" + this._r + ", 255, " + this._b + ") 100%)";
        this.bSlider = "-webkit-linear-gradient(left, rgb(" + this._r + ", " + this._g + ", 0) 0%, rgb(" + this._r + ", " + this._g + ", 255) 100%)";
        this.gb = "-webkit-linear-gradient(bottom, rgb(" + Math.round(this._r / 2) + ", 0, 0) 0%, rgb(" + Math.round(this._r / 2) + ", 255, 0) 100%), -webkit-linear-gradient(left, rgb(" + Math.round(this._r / 2) + ", 0, 0) 0%, rgb(" + Math.round(this._r / 2) + ", 0, 255) 100%)";
        this.rb = "-webkit-linear-gradient(bottom, rgb(0, " + Math.round(this._g / 2) + ", 0) 0%, rgb(255, " + Math.round(this._g / 2) + ", 0) 100%), -webkit-linear-gradient(left, rgb(0, " + Math.round(this._g / 2) + ", 0) 0%, rgb(0, " + Math.round(this._g / 2) + ", 255) 100%)";
        this.rg = "-webkit-linear-gradient(bottom, rgb(0, 0, " + Math.round(this._b / 2) + ") 0%, rgb(0, 255, " + Math.round(this._b / 2) + ") 100%), -webkit-linear-gradient(left, rgb(0, 0, " + Math.round(this._b / 2) + ") 0%, rgb(255, 0, " + Math.round(this._b / 2) + ") 100%)";
        this.rgb = "rgb(" + this._r + ", " + this._g + ", " + this._b + ")";
    };
    RGB.toHSB = function (r, g, b) {
        r /= 255;
        g /= 255;
        b /= 255;
        var H, S, V, C;
        V = Math.max(r, g, b);
        C = V - Math.min(r, g, b);
        H = (C === 0 ? null :
            V === r ? (g - b) / C :
                V === g ? (b - r) / C + 2 :
                    (r - g) / C + 4);
        H = ((H + 360) % 6) * 60;
        S = C === 0 ? 0 : C / V;
        return { h: Math.round(H), s: Math.round(S * 100), b: Math.round(V * 100) };
    };
    RGB.prototype.toHSB = function () {
        return RGB.toHSB(this.r, this.g, this.b);
    };
    Object.defineProperty(RGB.prototype, "hex", {
        get: function () {
            return this._hex;
        },
        set: function (hex) {
            this.hexError = false;
            if (this._hex === hex) {
                return;
            }
            this._hex = hex;
            if (hex.match(/^\#[A-Z0-9]{6}$/ig)) {
                this._r = parseInt(hex.substr(1, 2), 16);
                this._g = parseInt(hex.substr(3, 2), 16);
                this._b = parseInt(hex.substr(5, 2), 16);
            }
            else {
                this.hexError = true;
                return;
            }
            if (this.observer)
                this.observer.next(this);
            this.hexChange.emit(this._hex);
        },
        enumerable: true,
        configurable: true
    });
    RGB.leftPad = function (str, len, ch) {
        if (ch === void 0) { ch = ' '; }
        while (str.length < len)
            str = ch + str;
        return str;
    };
    RGB.toHex = function (r, g, b) {
        return ("#" + RGB.leftPad(r.toString(16), 2, '0') + RGB.leftPad(g.toString(16), 2, '0') + RGB.leftPad(b.toString(16), 2, '0')).toUpperCase();
    };
    RGB.prototype.toHex = function () {
        return RGB.toHex(this._r, this._g, this._b);
    };
    return RGB;
}());
export { RGB };
//# sourceMappingURL=color.component.js.map