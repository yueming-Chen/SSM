var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import { Component, ContentChild, ViewChild, Input, Output, EventEmitter, ViewEncapsulation } from '@angular/core';
import { defaults, bind } from "@ay/util/dist";
import * as moment from "moment";
var DateTimeComponent = (function () {
    //- 事件函數
    function DateTimeComponent() {
        //- 參數
        /** data */
        this._data = moment().format("YYYY/MM/DD HH:mm:ss");
        this.dataChange = new EventEmitter();
        /** format */
        this._format = "YYYY/MM/DD HH:mm:ss";
        this.formatChange = new EventEmitter();
        /** date */
        this._date = [moment().format("YYYY/MM/DD")];
        this.dateChange = new EventEmitter();
        /** time */
        this._time = moment().format('HH:mm:ss');
        this.timeChange = new EventEmitter();
        //- 樣版
        /** header */
        this.defaultDateHeaderTemplate = null;
        this.dateHeaderTemplate = null;
        /** Year */
        this.defaultDateYearTemplate = null;
        this.dateYearTemplate = null;
        /** YearDropdownDisplay */
        this.defaultDateYearDropdownDisplayTemplate = null;
        this.dateYearDropdownDisplayTemplate = null;
        /** YearDropdownItem */
        this.defaultDateYearDropdownItemTemplate = null;
        this.dateYearDropdownItemTemplate = null;
        /** Month */
        this.defaultDateMonthTemplate = null;
        this.dateMonthTemplate = null;
        /** MonthDropdownDisplay */
        this.defaultDateMonthDropdownDisplayTemplate = null;
        this.dateMonthDropdownDisplayTemplate = null;
        /** MonthDropdownItem */
        this.defaultDateMonthDropdownItemTemplate = null;
        this.dateMonthDropdownItemTemplate = null;
        /** Day */
        this.defaultDateDayTemplate = null;
        this.dateDayTemplate = null;
        /** Weeks */
        this.defaultDateWeeksTemplate = null;
        this.dateWeeksTemplate = null;
        /** Weekday */
        this.defaultDateWeekdayTemplate = null;
        this.dateWeekdayTemplate = null;
        /** Hour */
        this.defaultTimeHourTemplate = null;
        this.timeHourTemplate = null;
        /** HourDropdownDisplay */
        this.defaultTimeHourDropdownDisplayTemplate = null;
        this.timeHourDropdownDisplayTemplate = null;
        /** HourDropdownItem */
        this.defaultTimeHourDropdownItemTemplate = null;
        this.timeHourDropdownItemTemplate = null;
        /** Minute */
        this.defaultTimeMinuteTemplate = null;
        this.timeMinuteTemplate = null;
        /** MinuteDropdownDisplay */
        this.defaultTimeMinuteDropdownDisplayTemplate = null;
        this.timeMinuteDropdownDisplayTemplate = null;
        /** MinuteDropdownItem */
        this.defaultTimeMinuteDropdownItemTemplate = null;
        this.timeMinuteDropdownItemTemplate = null;
        /** Second */
        this.defaultTimeSecondTemplate = null;
        this.timeSecondTemplate = null;
        /** SecondDropdownDisplay */
        this.defaultTimeSecondDropdownDisplayTemplate = null;
        this.timeSecondDropdownDisplayTemplate = null;
        /** SecondDropdownItem */
        this.defaultTimeSecondDropdownItemTemplate = null;
        this.timeSecondDropdownItemTemplate = null;
        /** Spliter */
        this.defaultTimeSpliterTemplate = null;
        this.timeSpliterTemplate = null;
    }
    Object.defineProperty(DateTimeComponent.prototype, "data", {
        get: function () {
            return this._data;
        },
        set: function (data) {
            if (this._data === data)
                return;
            this._data = data;
            this.dataChange.emit(this._data);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DateTimeComponent.prototype, "format", {
        get: function () {
            return this._format;
        },
        set: function (format) {
            if (this._format === format)
                return;
            this._format = format;
            this.formatChange.emit(this._format);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DateTimeComponent.prototype, "date", {
        get: function () {
            return this._date;
        },
        set: function (date) {
            if (this._date === date)
                return;
            this._date = date;
            this.dateChange.emit(this._date);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DateTimeComponent.prototype, "time", {
        get: function () {
            return this._time;
        },
        set: function (time) {
            if (this._time === time)
                return;
            this._time = time;
            this.timeChange.emit(this._time);
        },
        enumerable: true,
        configurable: true
    });
    DateTimeComponent.prototype.ngAfterViewInit = function () { };
    DateTimeComponent.prototype.ngAfterContentInit = function () {
        this.dateHeaderTemplate = defaults(this.dateHeaderTemplate, this.defaultDateHeaderTemplate);
        this.dateYearTemplate = defaults(this.dateYearTemplate, this.defaultDateYearTemplate);
        this.dateYearDropdownDisplayTemplate = defaults(this.dateYearDropdownDisplayTemplate, this.defaultDateYearDropdownDisplayTemplate);
        this.dateYearDropdownItemTemplate = defaults(this.dateYearDropdownItemTemplate, this.defaultDateYearDropdownItemTemplate);
        this.dateMonthTemplate = defaults(this.dateMonthTemplate, this.defaultDateMonthTemplate);
        this.dateMonthDropdownDisplayTemplate = defaults(this.dateMonthDropdownDisplayTemplate, this.defaultDateMonthDropdownDisplayTemplate);
        this.dateMonthDropdownItemTemplate = defaults(this.dateMonthDropdownItemTemplate, this.defaultDateMonthDropdownItemTemplate);
        this.dateWeeksTemplate = defaults(this.dateWeeksTemplate, this.defaultDateWeeksTemplate);
        this.dateWeekdayTemplate = defaults(this.dateWeekdayTemplate, this.defaultDateWeekdayTemplate);
        this.dateDayTemplate = defaults(this.dateDayTemplate, this.defaultDateDayTemplate);
        this.timeHourTemplate = defaults(this.timeHourTemplate, this.defaultTimeHourTemplate);
        this.timeHourDropdownDisplayTemplate = defaults(this.timeHourDropdownDisplayTemplate, this.defaultTimeHourDropdownDisplayTemplate);
        this.timeHourDropdownItemTemplate = defaults(this.timeHourDropdownItemTemplate, this.defaultTimeHourDropdownItemTemplate);
        this.timeMinuteTemplate = defaults(this.timeMinuteTemplate, this.defaultTimeMinuteTemplate);
        this.timeMinuteDropdownDisplayTemplate = defaults(this.timeMinuteDropdownDisplayTemplate, this.defaultTimeMinuteDropdownDisplayTemplate);
        this.timeMinuteDropdownItemTemplate = defaults(this.timeMinuteDropdownItemTemplate, this.defaultTimeMinuteDropdownItemTemplate);
        this.timeSecondTemplate = defaults(this.timeSecondTemplate, this.defaultTimeSecondTemplate);
        this.timeSecondDropdownDisplayTemplate = defaults(this.timeSecondDropdownDisplayTemplate, this.defaultTimeSecondDropdownDisplayTemplate);
        this.timeSecondDropdownItemTemplate = defaults(this.timeSecondDropdownItemTemplate, this.defaultTimeSecondDropdownItemTemplate);
        this.timeSpliterTemplate = defaults(this.timeSpliterTemplate, this.defaultTimeSpliterTemplate);
        this._dataChange$ = this.dataChange.subscribe(this.afterDataChange, this.onError);
        this._datetimeChange$ = this.timeChange.merge(this.dateChange).debounceTime(250).subscribe(this.afterDateTimeChange, this.onError);
    };
    DateTimeComponent.prototype.ngOnDestroy = function () {
        this._dataChange$.unsubscribe();
        this._datetimeChange$.unsubscribe();
    };
    DateTimeComponent.prototype.afterDateTimeChange = function () {
        var date = moment(this.date[0], "YYYY/MM/DD");
        var time = moment(this.time, "HH:mm:ss");
        var datetime = date;
        datetime.hour(time.hour());
        datetime.minute(time.minute());
        datetime.second(time.second());
        this.data = datetime.format(this.format);
    };
    DateTimeComponent.prototype.afterDataChange = function () {
        var datetime = moment(this.data, this.format);
        this.date = [datetime.format("YYYY/MM/DD")];
        this.time = datetime.format("HH:mm:ss");
    };
    DateTimeComponent.prototype.onError = function (err) {
        console.error(err);
    };
    DateTimeComponent.decorators = [
        { type: Component, args: [{
                    selector: 'ay-datetime',
                    template: "\n    <ng-template #defaultDateHeaderTemplate=\"\" let-datepicker=\"datepicker\"><div class=\"header\"><button (click)=\"datepicker.prevMonth()\" tabindex=\"1\"><div class=\"fa fa-angle-left\"></div></button><ng-template [ngTemplateOutlet]=\"dateYearTemplate\" [ngOutletContext]=\"{ datepicker: datepicker }\"></ng-template><ng-template [ngTemplateOutlet]=\"dateMonthTemplate\" [ngOutletContext]=\"{ datepicker: datepicker }\"></ng-template><button (click)=\"datepicker.nextMonth()\" tabindex=\"1\"><div class=\"fa fa-angle-right\"></div></button></div></ng-template><ng-template #defaultDateYearTemplate=\"\" let-datepicker=\"datepicker\"><ay-dropdown class=\"year\" [(data)]=\"datepicker.year\" [items]=\"datepicker.years\" icon=\"\"><ng-template #displayTemplate=\"\" let-display=\"display\" let-dropdown=\"dropdown\"><ng-template [ngTemplateOutlet]=\"dateYearDropdownDisplayTemplate\" [ngOutletContext]=\"{ dropdown: dropdown, datepicker: datepicker, display: display }\"></ng-template></ng-template><ng-template #itemTemplate=\"\" let-disable=\"disable\" let-dropdown=\"dropdown\" let-index=\"index\" let-item=\"item\"><ng-template [ngTemplateOutlet]=\"dateYearDropdownItemTemplate\" [ngOutletContext]=\"{ dropdown: dropdown, datepicker: datepicker, disable: disable, item: item, index: index }\"></ng-template></ng-template></ay-dropdown></ng-template><ng-template #defaultDateYearDropdownDisplayTemplate=\"\" let-datepicker=\"datepicker\" let-display=\"display\" let-dropdown=\"dropdown\"><div class=\"display\" [ngClass]=\"{ isOpen: dropdown.isOpen, isFocus: dropdown.isFocus }\"><div class=\"label\">{{ display }}</div></div></ng-template><ng-template #defaultDateYearDropdownItemTemplate=\"\" let-datepicker=\"datepicker\" let-disable=\"disable\" let-dropdown=\"dropdown\" let-index=\"index\" let-item=\"item\"><div class=\"item\" [ngClass]=\"{ hover: dropdown.hoverIndex == index, disable: disable}\">{{ item }}</div></ng-template><ng-template #defaultDateMonthTemplate=\"\" let-datepicker=\"datepicker\"><ay-dropdown class=\"month\" [(data)]=\"datepicker.month\" [items]=\"datepicker.months\" icon=\"\"><ng-template #displayTemplate=\"\" let-display=\"display\" let-dropdown=\"dropdown\"><ng-template [ngTemplateOutlet]=\"dateMonthDropdownDisplayTemplate\" [ngOutletContext]=\"{ display: display, dropdown: dropdown, datepicker: datepicker }\"></ng-template></ng-template><ng-template #itemTemplate=\"\" let-disable=\"disable\" let-dropdown=\"dropdown\" let-index=\"index\" let-item=\"item\"><ng-template [ngTemplateOutlet]=\"dateMonthDropdownItemTemplate\" [ngOutletContext]=\"{ dropdown: dropdown, datepicker: datepicker, disable: disable, item: item, index: index }\"></ng-template></ng-template></ay-dropdown></ng-template><ng-template #defaultDateMonthDropdownDisplayTemplate=\"\" let-datepicker=\"datepicker\" let-display=\"display\" let-dropdown=\"dropdown\"><div class=\"display\" [ngClass]=\"{ isOpen: dropdown.isOpen, isFocus: dropdown.isFocus }\"><div class=\"label\">{{ datepicker.momthString[display] }}</div></div></ng-template><ng-template #defaultDateMonthDropdownItemTemplate=\"\" let-datepicker=\"datepicker\" let-disable=\"disable\" let-dropdown=\"dropdown\" let-index=\"index\" let-item=\"item\"><div class=\"item\" [ngClass]=\"{ hover: dropdown.hoverIndex == index, disable: disable}\">{{ datepicker.momthString[item] }}</div></ng-template><ng-template #defaultDateWeeksTemplate=\"\" let-datepicker=\"datepicker\"><div class=\"weeks\"><div class=\"week weekdays\"><ng-template [ngForOf]=\"datepicker.weekdayString\" let-i=\"index\" let-weekday=\"\" ngFor=\"\"><ng-template [ngTemplateOutlet]=\"dateWeekdayTemplate\" [ngOutletContext]=\"{ datepicker: datepicker, weekday: weekday }\"></ng-template></ng-template></div><div class=\"week\" *ngFor=\"let week of datepicker.weeks\"><ng-template [ngForOf]=\"week\" let-day=\"\" ngFor=\"\"><ng-template [ngTemplateOutlet]=\"dateDayTemplate\" [ngOutletContext]=\"{ day: day, datepicker: datepicker }\"></ng-template></ng-template></div></div></ng-template><ng-template #defaultDateWeekdayTemplate=\"\" let-datepicker=\"datepicker\" let-weekday=\"weekday\"><div class=\"weekday\"><p>{{ weekday }}</p></div></ng-template><ng-template #defaultDateDayTemplate=\"\" let-datepicker=\"datepicker\" let-day=\"day\"><div class=\"day\" [ngClass]=\"{ isSameMonth: day.isSameMonth, isSaturday: day.isSaturday, isSunday: day.isSunday, isToday: day.isToday, isSelected: day.isSelected, isSelectable: day.isSelectable }\" (click)=\"datepicker.selectDay(day)\"><div class=\"circle\">{{ day.date() }}</div></div></ng-template><ng-template #defaultTimeHourTemplate=\"\" let-timepicker=\"timepicker\"><ay-dropdown class=\"hour\" [(data)]=\"timepicker.hour\" [items]=\"timepicker.hours\" icon=\"\"><ng-template #displayTemplate=\"\" let-display=\"display\" let-dropdown=\"dropdown\"><ng-template [ngTemplateOutlet]=\"timeHourDropdownDisplayTemplate\" [ngOutletContext]=\"{ dropdown: dropdown, display: display, timepicker: timepicker }\"></ng-template></ng-template><ng-template #itemTemplate=\"\" let-disable=\"disable\" let-dropdown=\"dropdown\" let-index=\"index\" let-item=\"item\"><ng-template [ngTemplateOutlet]=\"timeHourDropdownItemTemplate\" [ngOutletContext]=\"{ dropdown: dropdown, item: item, index: index, disable: disable, timepicker: timepicker }\"></ng-template></ng-template></ay-dropdown></ng-template><ng-template #defaultTimeHourDropdownDisplayTemplate=\"\" let-display=\"display\" let-dropdown=\"dropdown\" let-timer=\"timer\"><div class=\"display\" [ngClass]=\"{ isOpen: dropdown.isOpen, isFocus: dropdown.isFocus }\"><div class=\"label\">{{ display }}</div></div></ng-template><ng-template #defaultTimeHourDropdownItemTemplate=\"\" let-disable=\"disable\" let-dropdown=\"dropdown\" let-index=\"index\" let-item=\"item\" let-timepicker=\"timepicker\"><div class=\"item\" [ngClass]=\"{ hover: dropdown.hoverIndex == index, disable: disable}\">{{ item }}</div></ng-template><ng-template #defaultTimeMinuteTemplate=\"\" let-timepicker=\"timepicker\"><ay-dropdown class=\"minute\" [(data)]=\"timepicker.minute\" [items]=\"timepicker.minutes\" icon=\"\"><ng-template #displayTemplate=\"\" let-display=\"display\" let-dropdown=\"dropdown\"><ng-template [ngTemplateOutlet]=\"timeMinuteDropdownDisplayTemplate\" [ngOutletContext]=\"{ dropdown: dropdown, display: display, timepicker: timepicker }\"></ng-template></ng-template><ng-template #itemTemplate=\"\" let-disable=\"disable\" let-dropdown=\"dropdown\" let-index=\"index\" let-item=\"item\"><ng-template [ngTemplateOutlet]=\"timeMinuteDropdownItemTemplate\" [ngOutletContext]=\"{ dropdown: dropdown, item: item, index: index, disable: disable, timepicker: timepicker }\"></ng-template></ng-template></ay-dropdown></ng-template><ng-template #defaultTimeMinuteDropdownDisplayTemplate=\"\" let-display=\"display\" let-dropdown=\"dropdown\" let-timer=\"timer\"><div class=\"display\" [ngClass]=\"{ isOpen: dropdown.isOpen, isFocus: dropdown.isFocus }\"><div class=\"label\">{{ display }}</div></div></ng-template><ng-template #defaultTimeMinuteDropdownItemTemplate=\"\" let-disable=\"disable\" let-dropdown=\"dropdown\" let-index=\"index\" let-item=\"item\" let-timepicker=\"timepicker\"><div class=\"item\" [ngClass]=\"{ hover: dropdown.hoverIndex == index, disable: disable}\">{{ item }}</div></ng-template><ng-template #defaultTimeSecondTemplate=\"\" let-timepicker=\"timepicker\"><ay-dropdown class=\"second\" [(data)]=\"timepicker.second\" [items]=\"timepicker.seconds\" icon=\"\"><ng-template #displayTemplate=\"\" let-display=\"display\" let-dropdown=\"dropdown\"><ng-template [ngTemplateOutlet]=\"timeSecondDropdownDisplayTemplate\" [ngOutletContext]=\"{ dropdown: dropdown, display: display, timepicker: timepicker }\"></ng-template></ng-template><ng-template #itemTemplate=\"\" let-disable=\"disable\" let-dropdown=\"dropdown\" let-index=\"index\" let-item=\"item\"><ng-template [ngTemplateOutlet]=\"timeSecondDropdownItemTemplate\" [ngOutletContext]=\"{ dropdown: dropdown, item: item, index: index, disable: disable, timepicker: timepicker }\"></ng-template></ng-template></ay-dropdown></ng-template><ng-template #defaultTimeSecondDropdownDisplayTemplate=\"\" let-display=\"display\" let-dropdown=\"dropdown\" let-timer=\"timer\"><div class=\"display\" [ngClass]=\"{ isOpen: dropdown.isOpen, isFocus: dropdown.isFocus }\"><div class=\"label\">{{ display }}</div></div></ng-template><ng-template #defaultTimeSecondDropdownItemTemplate=\"\" let-disable=\"disable\" let-dropdown=\"dropdown\" let-index=\"index\" let-item=\"item\" let-timepicker=\"timepicker\"><div class=\"item\" [ngClass]=\"{ hover: dropdown.hoverIndex == index, disable: disable}\">{{ item }}</div></ng-template><ay-date [(data)]=\"date\"><ng-template #headerTemplate=\"\" let-datepicker=\"datepicker\"><ng-template [ngTemplateOutlet]=\"dateHeaderTemplate\" [ngOutletContext]=\"{ datepicker: datepicker }\"></ng-template></ng-template><ng-template #weeksTemplate=\"\" let-datepicker=\"datepicker\"><ng-template [ngTemplateOutlet]=\"dateWeeksTemplate\" [ngOutletContext]=\"{ datepicker: datepicker }\"></ng-template></ng-template></ay-date><ay-time [(data)]=\"time\"><ng-template #hourTemplate=\"\" let-timepicker=\"timepicker\"><ng-template [ngTemplateOutlet]=\"timeHourTemplate\" [ngOutletContext]=\"{ timepicker: timepicker }\"></ng-template></ng-template><ng-template #minuteTemplate=\"\" let-timepicker=\"timepicker\"><ng-template [ngTemplateOutlet]=\"timeMinuteTemplate\" [ngOutletContext]=\"{ timepicker: timepicker }\"></ng-template></ng-template><ng-template #secondTemplate=\"\" let-timepicker=\"timepicker\"><ng-template [ngTemplateOutlet]=\"timeSecondTemplate\" [ngOutletContext]=\"{ timepicker: timepicker }\"></ng-template></ng-template><ng-template #spliterTemplate=\"\"><span class=\"spliter\">:</span></ng-template></ay-time>\n  ",
                    styles: ["\n    ay-datetime {\n      vertical-align: top;\n      width: 16.8em;\n      display: inline-block;\n      box-shadow: 0 1px 7px rgba(0, 0, 0, 0.05), 0 7px 17px rgba(0, 0, 0, 0.1); }\n      ay-datetime ay-date {\n        margin: 0;\n        box-shadow: none; }\n      ay-datetime ay-time {\n        margin: 0;\n        width: 21em;\n        padding-left: 3em;\n        box-sizing: border-box;\n        box-shadow: none; }\n        ay-datetime ay-time .spliter {\n          width: 3em;\n          text-align: center;\n          line-height: 3em; }\n  "],
                    encapsulation: ViewEncapsulation.None
                },] },
    ];
    /** @nocollapse */
    DateTimeComponent.ctorParameters = function () { return []; };
    DateTimeComponent.propDecorators = {
        'dataChange': [{ type: Output },],
        'data': [{ type: Input },],
        'format': [{ type: Input },],
        'defaultDateHeaderTemplate': [{ type: ViewChild, args: ["defaultDateHeaderTemplate",] },],
        'dateHeaderTemplate': [{ type: ContentChild, args: ["dateDateHeaderTemplate",] },],
        'defaultDateYearTemplate': [{ type: ViewChild, args: ["defaultDateYearTemplate",] },],
        'dateYearTemplate': [{ type: ContentChild, args: ["dateYearTemplate",] },],
        'defaultDateYearDropdownDisplayTemplate': [{ type: ViewChild, args: ["defaultDateYearDropdownDisplayTemplate",] },],
        'dateYearDropdownDisplayTemplate': [{ type: ContentChild, args: ["dateYearDropdownDisplayTemplate",] },],
        'defaultDateYearDropdownItemTemplate': [{ type: ViewChild, args: ["defaultDateYearDropdownItemTemplate",] },],
        'dateYearDropdownItemTemplate': [{ type: ContentChild, args: ["dateYearDropdownItemTemplate",] },],
        'defaultDateMonthTemplate': [{ type: ViewChild, args: ["defaultDateMonthTemplate",] },],
        'dateMonthTemplate': [{ type: ContentChild, args: ["dateMonthTemplate",] },],
        'defaultDateMonthDropdownDisplayTemplate': [{ type: ViewChild, args: ["defaultDateMonthDropdownDisplayTemplate",] },],
        'dateMonthDropdownDisplayTemplate': [{ type: ContentChild, args: ["dateMonthDropdownDisplayTemplate",] },],
        'defaultDateMonthDropdownItemTemplate': [{ type: ViewChild, args: ["defaultDateMonthDropdownItemTemplate",] },],
        'dateMonthDropdownItemTemplate': [{ type: ContentChild, args: ["dateMonthDropdownItemTemplate",] },],
        'defaultDateDayTemplate': [{ type: ViewChild, args: ["defaultDateDayTemplate",] },],
        'dateDayTemplate': [{ type: ContentChild, args: ["dateDayTemplate",] },],
        'defaultDateWeeksTemplate': [{ type: ViewChild, args: ["defaultDateWeeksTemplate",] },],
        'dateWeeksTemplate': [{ type: ContentChild, args: ["dateWeeksTemplate",] },],
        'defaultDateWeekdayTemplate': [{ type: ViewChild, args: ["defaultDateWeekdayTemplate",] },],
        'dateWeekdayTemplate': [{ type: ContentChild, args: ["dateWeekdayTemplate",] },],
        'defaultTimeHourTemplate': [{ type: ViewChild, args: ["defaultTimeHourTemplate",] },],
        'timeHourTemplate': [{ type: ContentChild, args: ["timeHourTemplate",] },],
        'defaultTimeHourDropdownDisplayTemplate': [{ type: ViewChild, args: ["defaultTimeHourDropdownDisplayTemplate",] },],
        'timeHourDropdownDisplayTemplate': [{ type: ContentChild, args: ["timeHourDropdownDisplayTemplate",] },],
        'defaultTimeHourDropdownItemTemplate': [{ type: ViewChild, args: ["defaultTimeHourDropdownItemTemplate",] },],
        'timeHourDropdownItemTemplate': [{ type: ContentChild, args: ["timeHourDropdownItemTemplate",] },],
        'defaultTimeMinuteTemplate': [{ type: ViewChild, args: ["defaultTimeMinuteTemplate",] },],
        'timeMinuteTemplate': [{ type: ContentChild, args: ["timeMinuteTemplate",] },],
        'defaultTimeMinuteDropdownDisplayTemplate': [{ type: ViewChild, args: ["defaultTimeMinuteDropdownDisplayTemplate",] },],
        'timeMinuteDropdownDisplayTemplate': [{ type: ContentChild, args: ["timeMinuteDropdownDisplayTemplate",] },],
        'defaultTimeMinuteDropdownItemTemplate': [{ type: ViewChild, args: ["defaultTimeMinuteDropdownItemTemplate",] },],
        'timeMinuteDropdownItemTemplate': [{ type: ContentChild, args: ["timeMinuteDropdownItemTemplate",] },],
        'defaultTimeSecondTemplate': [{ type: ViewChild, args: ["defaultTimeSecondTemplate",] },],
        'timeSecondTemplate': [{ type: ContentChild, args: ["timeSecondTemplate",] },],
        'defaultTimeSecondDropdownDisplayTemplate': [{ type: ViewChild, args: ["defaultTimeSecondDropdownDisplayTemplate",] },],
        'timeSecondDropdownDisplayTemplate': [{ type: ContentChild, args: ["timeSecondDropdownDisplayTemplate",] },],
        'defaultTimeSecondDropdownItemTemplate': [{ type: ViewChild, args: ["defaultTimeSecondDropdownItemTemplate",] },],
        'timeSecondDropdownItemTemplate': [{ type: ContentChild, args: ["timeSecondDropdownItemTemplate",] },],
        'defaultTimeSpliterTemplate': [{ type: ViewChild, args: ["defaultTimeSpliterTemplate",] },],
        'timeSpliterTemplate': [{ type: ContentChild, args: ["timeSpliterTemplate",] },],
    };
    __decorate([
        bind
    ], DateTimeComponent.prototype, "ngAfterViewInit", null);
    __decorate([
        bind
    ], DateTimeComponent.prototype, "ngAfterContentInit", null);
    __decorate([
        bind
    ], DateTimeComponent.prototype, "ngOnDestroy", null);
    __decorate([
        bind
    ], DateTimeComponent.prototype, "afterDateTimeChange", null);
    __decorate([
        bind
    ], DateTimeComponent.prototype, "afterDataChange", null);
    __decorate([
        bind
    ], DateTimeComponent.prototype, "onError", null);
    return DateTimeComponent;
}());
export { DateTimeComponent };
//# sourceMappingURL=datetime.component.js.map