{"version":3,"sources":["../../tmp/notify/notify.component.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAA,EAAW,UAAA,EAAyB,MAAO,eAAA,CAAgB;AACpE,OAAO,EAAE,aAAA,EAAsB,MAAO,kBAAA,CAAmB;AAGzD;IAGE,yBACS,OAAmB,EACnB,YAA2B;QAD3B,YAAO,GAAP,OAAO,CAAY;QACnB,iBAAY,GAAZ,YAAY,CAAe;QAJ7B,SAAI,GAAa,EAAE,CAAC;IAM3B,CAAC;IAEM,4CAAkB,GAAzB;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,EAAE,IAAI,QAAQ,CAAC,CAAC,CAAC;YAC9C,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC;QACrC,CAAC;IACH,CAAC;IACI,0BAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;oBACxB,QAAQ,EAAE,WAAW;oBACrB,QAAQ,EAAE,gvBAET;oBACD,MAAM,EAAE,CAAC,4wCA4CR,CAAC;iBACH,EAAG,EAAE;KACL,CAAC;IACF,kBAAkB;IACX,8BAAc,GAAmE,cAAM,OAAA;QAC9F,EAAC,IAAI,EAAE,UAAU,GAAG;QACpB,EAAC,IAAI,EAAE,aAAa,GAAG;KACtB,EAH6F,CAG7F,CAAC;IACF,sBAAC;CAxED,AAwEC,IAAA;SAxEY,eAAe","file":"notify.component.js","sourceRoot":"","sourcesContent":["import { Component, ElementRef, EventEmitter } from \"@angular/core\";\nimport { NotifyService, Notify } from \"./notify.service\";\n\n\nexport class NotifyComponent {\n  public list: Notify[] = [];\n\n  public constructor(\n    public element: ElementRef,\n    public toasyService: NotifyService\n  ) {\n  }\n\n  public ngAfterContentInit() {\n    if (this.element.nativeElement.id == \"common\") {\n      this.list = this.toasyService.list;\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: \"ay-notify\",\n  template: `\n    <div id=\"toasty\"><div *ngFor=\"let toasty of list; let i=index\"><div class=\"toast\" [ngClass]=\"toasty.status\" [style.background-color]=\"toasty.backgroundColor\" [style.color]=\"toasty.color\"><i class=\"fa fa-times close\" aria-hidden=\"true\" *ngIf=\"toasty.showClose\" [style.color]=\"toasty.color\" (click)=\"toasty.destroy()\"></i><div class=\"close\" *ngIf=\"!toasty.showClose &amp;&amp; toasty.timeout &gt; 0\">{{ toasty.timerCount}}</div><div class=\"flex-row\"><div class=\"icon\"><i class=\"fa\" *ngIf=\"toasty.icon\" [ngClass]=\"toasty.icon\"></i></div><div class=\"flex-1\"><div class=\"title\">{{ toasty.title }}</div><div class=\"message\" *ngIf=\"toasty.message\">{{ toasty.message}}</div></div></div></div></div></div>\n  `,\n  styles: [`\n    #toasty {\n      position: fixed;\n      z-index: 999999;\n      bottom: 1em;\n      right: 1em;\n      text-align: right; }\n      #toasty .toast {\n        text-align: left;\n        display: inline-block;\n        transition: all .5s ease-in;\n        cursor: pointer;\n        margin-top: .5em;\n        padding: .5em 2em;\n        right: 0;\n        box-shadow: 0px 1px 7px rgba(0, 0, 0, 0.1), 0px 7px 17px rgba(0, 0, 0, 0.1);\n        opacity: 1;\n        position: relative;\n        filter: blur(0px); }\n        #toasty .toast .icon {\n          width: 2em;\n          transform: translateX(-1em);\n          display: flex;\n          text-align: center;\n          align-items: center; }\n          #toasty .toast .icon i {\n            margin: 0 auto; }\n        #toasty .toast .close {\n          position: absolute;\n          top: .5em;\n          right: 10px;\n          font-size: 1em;\n          line-height: 1.5em; }\n          #toasty .toast .close:focus {\n            outline: 0; }\n        #toasty .toast .title {\n          line-height: 1.5em;\n          font-size: 1em; }\n        #toasty .toast .message {\n          line-height: 1.5em;\n          font-size: .8em; }\n        #toasty .toast.hidden {\n          opacity: 0;\n          filter: blur(10px); }\n  `]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: NotifyService, },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}