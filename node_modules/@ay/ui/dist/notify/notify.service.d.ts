import { EventEmitter } from "@angular/core";
export declare class NotifyService {
    defaultTimeout: number;
    maxStack: number;
    list: Notify[];
    createNotifyEvent: EventEmitter<Notify>;
    setTimeoutEvent: EventEmitter<Notify>;
    setDefaultTimeout(timeout: number): void;
    setMaxStack(count: number): void;
    removeFromArray(array: any, item: any): void;
    generatorDestroyer(toasty: Notify): Function;
    add(toasty: Notify): Notify;
    info(title: string, message?: string, timeout?: number): Notify;
    success(title: string, message?: string, timeout?: number): Notify;
    error(title: string, message?: string, timeout?: number): Notify;
    warning(title: string, message?: string, timeout?: number): Notify;
    loading(title: string, message?: string, timeout?: number): Notify;
}
export declare class Notify {
    title: string;
    message: string;
    /** 可支援格式參照 ngClass: https://angular.io/docs/ts/latest/api/common/index/NgClass-directive.html */
    icon: any;
    color: string;
    backgroundColor: string;
    status: string;
    showClose: boolean;
    constructor(title: string, message?: string, closeTimeout?: number, 
        /** 可支援格式參照 ngClass: https://angular.io/docs/ts/latest/api/common/index/NgClass-directive.html */
        icon?: any, color?: string, backgroundColor?: string);
    update(title?: string, message?: string, timeout?: number, icon?: any, color?: string, backgroundColor?: string): void;
    private _timeout;
    timerCount: number;
    onDestroyEvent: EventEmitter<Notify>;
    timeCountChange: EventEmitter<Notify>;
    timeout: number;
    private _destroy;
    destroy: Function;
    private _destroyTimer;
    private _generatorTimer();
}
