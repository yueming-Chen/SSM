{"version":3,"sources":["../../tmp/cards/cards.component.ts"],"names":[],"mappings":"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","file":"cards.component.js","sourceRoot":"","sourcesContent":["import { Component, AfterContentInit, OnDestroy, AfterViewInit, Output, EventEmitter, Input, ContentChild, TemplateRef, ViewChild, ViewEncapsulation, ElementRef } from '@angular/core';\n\nimport { defaults } from \"@ay/util\";\n\nexport interface CardDataFormat {\n  title: string;\n  image: string;\n  context: string[] | string;\n  iconList: string[];\n}\n\n\nexport class CardsComponent implements AfterContentInit {\n\n  private _isChooseList: any = [];\n\n  \n  public isChooseListChange: EventEmitter<any> = new EventEmitter();\n\n  \n  public isChooseList = new Proxy(this._isChooseList, {\n    set: (target, property, value, receiver) => {\n      target[property] = value;\n      if (property === \"length\") this.isChooseListChange.emit(target);\n      return true;\n    },\n    get: (target, property) => {\n      if (property === \"all\") return target;\n      return target[property];\n    }\n  });\n\n  \n  public selectable: boolean = false;\n\n  private _data: CardDataFormat[];\n  \n  public dataChange: EventEmitter<any> = new EventEmitter();\n\n  \n  public get data(): CardDataFormat[] {\n    return this._data;\n  }\n\n  public set data(data: CardDataFormat[]) {\n    if (this._data === data) return;\n    this._data = data;\n    this.dataChange.emit(this._data);\n  }\n\n  \n  DefaultImageTemplate: ElementRef = null;\n\n  \n  imageTemplate: TemplateRef<any> = null;\n\n  \n  DefaultTitleTemplate: ElementRef = null;\n\n  \n  titleTemplate: TemplateRef<any> = null;\n\n  \n  DefaultContentTemplate: ElementRef = null;\n\n  \n  contentTemplate: TemplateRef<any> = null;\n\n  \n  DefaultIconListTemplate: ElementRef = null;\n\n  \n  iconListTemplate: TemplateRef<any> = null;\n\n  public ngAfterContentInit() {\n    this.imageTemplate = defaults(this.imageTemplate, this.DefaultImageTemplate);\n    this.titleTemplate = defaults(this.titleTemplate, this.DefaultTitleTemplate);\n    this.contentTemplate = defaults(this.contentTemplate, this.DefaultContentTemplate);\n    this.iconListTemplate = defaults(this.iconListTemplate, this.DefaultIconListTemplate);\n  }\n\n  public clickChoose(title: string) {\n    let nowIndex = this.isChooseList.indexOf(title);\n    nowIndex != -1 ? this.isChooseList.splice(nowIndex, 1) : this.isChooseList.push(title);\n  }\n\n  public containChoose(title: string): boolean {\n    return this.isChooseList.indexOf(title) == -1 ? false : true;\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ay-cards',\n  template: `\n    <ng-template #DefaultImageTemplate=\"\" let-index=\"i\" let-image=\"image\"><div class=\"image\"><img src=\"{{image}}\"></div></ng-template><ng-template #DefaultTitleTemplate=\"\" let-index=\"i\" let-title=\"title\"><div class=\"title\">{{title}}</div></ng-template><ng-template #DefaultContentTemplate=\"\" let-index=\"i\" let-content=\"contents\"><div class=\"content\"><ng-template [ngForOf]=\"content\" let-i=\"index\" let-content=\"\" ngFor=\"\"><p>{{content}}</p></ng-template></div></ng-template><ng-template #DefaultIconListTemplate=\"\" let-index=\"i\" let-icon=\"icons\"><div class=\"iconList\"><ng-template [ngForOf]=\"icon\" let-i=\"index\" let-icon=\"\" ngFor=\"\"><div class=\"fa\" [ngClass]=\"icon\"></div></ng-template></div></ng-template><ng-template [ngForOf]=\"data\" let-i=\"index\" let-data=\"\" ngFor=\"\"><div class=\"wraper\"><div class=\"container\"><div class=\"selectSide\" *ngIf=\"selectable\"><div class=\"selectBox\" (click)=\"clickChoose(data.title)\" [class.choose]=\"containChoose(data.title)\"><div class=\"arrowCheck\" [class.choose]=\"containChoose(data.title)\"></div></div></div><div class=\"context flex\"><ng-template [ngTemplateOutlet]=\"imageTemplate\" [ngOutletContext]=\"{image:data.image,i:i}\"></ng-template><ng-template [ngTemplateOutlet]=\"titleTemplate\" [ngOutletContext]=\"{title:data.title,i:i}\"></ng-template><ng-template [ngTemplateOutlet]=\"contentTemplate\" [ngOutletContext]=\"{contents:data.content,i:i}\"></ng-template><ng-template [ngTemplateOutlet]=\"iconListTemplate\" [ngOutletContext]=\"{icons:data.iconList,i:i}\"></ng-template></div></div></div></ng-template>\n  `,\n  styles: [`\n    .flex {\n      display: flex; }\n\n    .selectSide {\n      display: flex;\n      flex: 1;\n      align-items: center;\n      justify-content: center; }\n      .selectSide .selectBox {\n        width: 40px;\n        height: 40px;\n        border-radius: 50%;\n        border: 2px solid #ccc;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        transition: all .5s linear; }\n        .selectSide .selectBox .arrowCheck {\n          border-right: 2px solid #ccc;\n          border-bottom: 2px solid #ccc;\n          width: 9px;\n          height: 20px;\n          transform: rotate(45deg);\n          transition: all .2s; }\n          .selectSide .selectBox .arrowCheck.choose {\n            border-color: white; }\n        .selectSide .selectBox:hover {\n          border-color: green; }\n        .selectSide .selectBox.choose {\n          border-color: green;\n          background: green; }\n\n    .container {\n      box-sizing: border-box;\n      display: flex;\n      box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.2), 0 1px 1px 0 rgba(0, 0, 0, 0.14), 0 2px 1px -1px rgba(0, 0, 0, 0.12);\n      width: 90%;\n      transition: all .5s linear;\n      margin: auto;\n      margin-bottom: 20px; }\n      .container .context {\n        flex: 3;\n        flex-direction: column;\n        border-radius: 0.5em; }\n        .container .context .image {\n          width: auto;\n          height: auto; }\n          .container .context .image img {\n            width: 100%; }\n        .container .context .title {\n          font-size: 1.5em;\n          padding-left: 8px; }\n        .container .context .content {\n          padding: 8px;\n          letter-spacing: 0.2em;\n          text-align: justify; }\n          .container .context .content p {\n            margin: 2px 1px; }\n        .container .context .iconList {\n          display: flex;\n          justify-content: center;\n          padding: 15px 5px; }\n          .container .context .iconList .fa {\n            font-size: 25px;\n            padding: 2px 10px; }\n  `],\n  encapsulation: ViewEncapsulation.None\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'isChooseListChange': [{ type: Output },],\n'isChooseList': [{ type: Input },],\n'selectable': [{ type: Input },],\n'dataChange': [{ type: Output },],\n'data': [{ type: Input },],\n'DefaultImageTemplate': [{ type: ViewChild, args: [\"DefaultImageTemplate\", ] },],\n'imageTemplate': [{ type: ContentChild, args: [\"imageTemplate\", ] },],\n'DefaultTitleTemplate': [{ type: ViewChild, args: [\"DefaultTitleTemplate\", ] },],\n'titleTemplate': [{ type: ContentChild, args: [\"titleTemplate\", ] },],\n'DefaultContentTemplate': [{ type: ViewChild, args: [\"DefaultContentTemplate\", ] },],\n'contentTemplate': [{ type: ContentChild, args: [\"contentTemplate\", ] },],\n'DefaultIconListTemplate': [{ type: ViewChild, args: [\"DefaultIconListTemplate\", ] },],\n'iconListTemplate': [{ type: ContentChild, args: [\"iconListTemplate\", ] },],\n};\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}