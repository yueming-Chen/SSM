import { Component, Output, EventEmitter, Input, ContentChild, ViewChild, ViewEncapsulation } from '@angular/core';
import { defaults } from "@ay/util";
var CardsComponent = (function () {
    function CardsComponent() {
        var _this = this;
        this._isChooseList = [];
        this.isChooseListChange = new EventEmitter();
        this.isChooseList = new Proxy(this._isChooseList, {
            set: function (target, property, value, receiver) {
                target[property] = value;
                if (property === "length")
                    _this.isChooseListChange.emit(target);
                return true;
            },
            get: function (target, property) {
                if (property === "all")
                    return target;
                return target[property];
            }
        });
        this.selectable = false;
        this.dataChange = new EventEmitter();
        this.DefaultImageTemplate = null;
        this.imageTemplate = null;
        this.DefaultTitleTemplate = null;
        this.titleTemplate = null;
        this.DefaultContentTemplate = null;
        this.contentTemplate = null;
        this.DefaultIconListTemplate = null;
        this.iconListTemplate = null;
    }
    Object.defineProperty(CardsComponent.prototype, "data", {
        get: function () {
            return this._data;
        },
        set: function (data) {
            if (this._data === data)
                return;
            this._data = data;
            this.dataChange.emit(this._data);
        },
        enumerable: true,
        configurable: true
    });
    CardsComponent.prototype.ngAfterContentInit = function () {
        this.imageTemplate = defaults(this.imageTemplate, this.DefaultImageTemplate);
        this.titleTemplate = defaults(this.titleTemplate, this.DefaultTitleTemplate);
        this.contentTemplate = defaults(this.contentTemplate, this.DefaultContentTemplate);
        this.iconListTemplate = defaults(this.iconListTemplate, this.DefaultIconListTemplate);
    };
    CardsComponent.prototype.clickChoose = function (title) {
        var nowIndex = this.isChooseList.indexOf(title);
        nowIndex != -1 ? this.isChooseList.splice(nowIndex, 1) : this.isChooseList.push(title);
    };
    CardsComponent.prototype.containChoose = function (title) {
        return this.isChooseList.indexOf(title) == -1 ? false : true;
    };
    CardsComponent.decorators = [
        { type: Component, args: [{
                    selector: 'ay-cards',
                    template: "\n    <ng-template #DefaultImageTemplate=\"\" let-index=\"i\" let-image=\"image\"><div class=\"image\"><img src=\"{{image}}\"></div></ng-template><ng-template #DefaultTitleTemplate=\"\" let-index=\"i\" let-title=\"title\"><div class=\"title\">{{title}}</div></ng-template><ng-template #DefaultContentTemplate=\"\" let-index=\"i\" let-content=\"contents\"><div class=\"content\"><ng-template [ngForOf]=\"content\" let-i=\"index\" let-content=\"\" ngFor=\"\"><p>{{content}}</p></ng-template></div></ng-template><ng-template #DefaultIconListTemplate=\"\" let-index=\"i\" let-icon=\"icons\"><div class=\"iconList\"><ng-template [ngForOf]=\"icon\" let-i=\"index\" let-icon=\"\" ngFor=\"\"><div class=\"fa\" [ngClass]=\"icon\"></div></ng-template></div></ng-template><ng-template [ngForOf]=\"data\" let-i=\"index\" let-data=\"\" ngFor=\"\"><div class=\"wraper\"><div class=\"container\"><div class=\"selectSide\" *ngIf=\"selectable\"><div class=\"selectBox\" (click)=\"clickChoose(data.title)\" [class.choose]=\"containChoose(data.title)\"><div class=\"arrowCheck\" [class.choose]=\"containChoose(data.title)\"></div></div></div><div class=\"context flex\"><ng-template [ngTemplateOutlet]=\"imageTemplate\" [ngOutletContext]=\"{image:data.image,i:i}\"></ng-template><ng-template [ngTemplateOutlet]=\"titleTemplate\" [ngOutletContext]=\"{title:data.title,i:i}\"></ng-template><ng-template [ngTemplateOutlet]=\"contentTemplate\" [ngOutletContext]=\"{contents:data.content,i:i}\"></ng-template><ng-template [ngTemplateOutlet]=\"iconListTemplate\" [ngOutletContext]=\"{icons:data.iconList,i:i}\"></ng-template></div></div></div></ng-template>\n  ",
                    styles: ["\n    .flex {\n      display: flex; }\n\n    .selectSide {\n      display: flex;\n      flex: 1;\n      align-items: center;\n      justify-content: center; }\n      .selectSide .selectBox {\n        width: 40px;\n        height: 40px;\n        border-radius: 50%;\n        border: 2px solid #ccc;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        transition: all .5s linear; }\n        .selectSide .selectBox .arrowCheck {\n          border-right: 2px solid #ccc;\n          border-bottom: 2px solid #ccc;\n          width: 9px;\n          height: 20px;\n          transform: rotate(45deg);\n          transition: all .2s; }\n          .selectSide .selectBox .arrowCheck.choose {\n            border-color: white; }\n        .selectSide .selectBox:hover {\n          border-color: green; }\n        .selectSide .selectBox.choose {\n          border-color: green;\n          background: green; }\n\n    .container {\n      box-sizing: border-box;\n      display: flex;\n      box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.2), 0 1px 1px 0 rgba(0, 0, 0, 0.14), 0 2px 1px -1px rgba(0, 0, 0, 0.12);\n      width: 90%;\n      transition: all .5s linear;\n      margin: auto;\n      margin-bottom: 20px; }\n      .container .context {\n        flex: 3;\n        flex-direction: column;\n        border-radius: 0.5em; }\n        .container .context .image {\n          width: auto;\n          height: auto; }\n          .container .context .image img {\n            width: 100%; }\n        .container .context .title {\n          font-size: 1.5em;\n          padding-left: 8px; }\n        .container .context .content {\n          padding: 8px;\n          letter-spacing: 0.2em;\n          text-align: justify; }\n          .container .context .content p {\n            margin: 2px 1px; }\n        .container .context .iconList {\n          display: flex;\n          justify-content: center;\n          padding: 15px 5px; }\n          .container .context .iconList .fa {\n            font-size: 25px;\n            padding: 2px 10px; }\n  "],
                    encapsulation: ViewEncapsulation.None
                },] },
    ];
    /** @nocollapse */
    CardsComponent.ctorParameters = function () { return []; };
    CardsComponent.propDecorators = {
        'isChooseListChange': [{ type: Output },],
        'isChooseList': [{ type: Input },],
        'selectable': [{ type: Input },],
        'dataChange': [{ type: Output },],
        'data': [{ type: Input },],
        'DefaultImageTemplate': [{ type: ViewChild, args: ["DefaultImageTemplate",] },],
        'imageTemplate': [{ type: ContentChild, args: ["imageTemplate",] },],
        'DefaultTitleTemplate': [{ type: ViewChild, args: ["DefaultTitleTemplate",] },],
        'titleTemplate': [{ type: ContentChild, args: ["titleTemplate",] },],
        'DefaultContentTemplate': [{ type: ViewChild, args: ["DefaultContentTemplate",] },],
        'contentTemplate': [{ type: ContentChild, args: ["contentTemplate",] },],
        'DefaultIconListTemplate': [{ type: ViewChild, args: ["DefaultIconListTemplate",] },],
        'iconListTemplate': [{ type: ContentChild, args: ["iconListTemplate",] },],
    };
    return CardsComponent;
}());
export { CardsComponent };
//# sourceMappingURL=cards.component.js.map