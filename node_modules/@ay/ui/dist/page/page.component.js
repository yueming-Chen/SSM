import { Component, ViewChild, ContentChild, Input, EventEmitter, Output, ViewEncapsulation } from "@angular/core";
import { defaults } from "@ay/util";
var PageColmponent = (function () {
    function PageColmponent() {
        this.highlight = 1;
        this.Length = 0;
        this.pageDisplayLimit = 5;
        this.pageChange = new EventEmitter();
        this._nowPage = 0;
        this.prevText = "Prev";
        this.nextText = "Next";
        this.DefaultPrevTemplate = null;
        this.prevTemplate = null;
        this.DefaultNextTemplate = null;
        this.nextTemplate = null;
        this.DefaultPageTemplate = null;
        this.pageTemplate = null;
        this._nowPage = 1;
    }
    Object.defineProperty(PageColmponent.prototype, "nowPage", {
        get: function () {
            return this._nowPage;
        },
        set: function (nowPage) {
            if (this._nowPage === nowPage)
                return;
            this._nowPage = nowPage;
            this.pageChange.emit(this._nowPage);
        },
        enumerable: true,
        configurable: true
    });
    PageColmponent.prototype.ngAfterContentInit = function () {
        this.prevTemplate = defaults(this.prevTemplate, this.DefaultPrevTemplate);
        this.nextTemplate = defaults(this.nextTemplate, this.DefaultNextTemplate);
        this.pageTemplate = defaults(this.pageTemplate, this.DefaultPageTemplate);
        this.dataLength = Array(this.Length).fill("").map(function (x, i) { return i + 1; }); // [0,1,2,3,4]
    };
    PageColmponent.prototype.range = function (index) {
        // this.nowPage
        var num = ~~(this.pageDisplayLimit / 2);
        var offset = (num == this.pageDisplayLimit / 2) ? 0 : 1;
        if (this.nowPage <= num) {
            return (index < this.pageDisplayLimit) ? true : false;
        }
        else if (this.nowPage >= this.Length - 2)
            return (index >= this.Length - this.pageDisplayLimit) ? true : false;
        return (index >= this.nowPage - (num + offset) && index < this.nowPage + num) ? true : false;
    };
    // 這樣寫是否好，還是要寫進pug中
    PageColmponent.prototype.clickPage = function (index) {
        this.highlight = this.nowPage = index;
    };
    PageColmponent.prototype.prevClick = function () {
        this.highlight = this.nowPage = this.nowPage == 1 ? 1 : this.nowPage - 1;
    };
    PageColmponent.prototype.nextClick = function () {
        this.highlight = this.nowPage = this.nowPage == this.Length ? this.Length : this.nowPage + 1;
    };
    PageColmponent.decorators = [
        { type: Component, args: [{
                    template: "\n    <ng-template #DefaultPrevTemplate=\"\" let-text=\"text\"><button class=\"ay-button prev\">{{text}}</button></ng-template><ng-template #DefaultNextTemplate=\"\" let-text=\"text\"><button class=\"ay-button next\">{{text}}</button></ng-template><ng-template #DefaultPageTemplate=\"\" let-data=\"data\" let-i=\"i\"><button class=\"ay-button\" *ngIf=\"range(i)\" [class.choose]=\"highlight == data\">{{data}}</button></ng-template><div class=\"page\" (click)=\"prevClick()\"><ng-template [ngTemplateOutlet]=\"prevTemplate\" [ngOutletContext]=\"{ text: prevText}\"></ng-template></div><ng-template [ngForOf]=\"dataLength\" let-i=\"index\" let-data=\"\" ngFor=\"\"><div class=\"page\" (click)=\"clickPage(data)\"><ng-template [ngTemplateOutlet]=\"pageTemplate\" [ngOutletContext]=\"{data:data,i:i}\"></ng-template></div></ng-template><div class=\"page\" (click)=\"nextClick()\"><ng-template [ngTemplateOutlet]=\"nextTemplate\" [ngOutletContext]=\"{ text: nextText}\"></ng-template></div>\n  ",
                    selector: 'ay-page',
                    styles: ["\n    .page {\n      display: inline-flex; }\n\n    .ay-button {\n      margin-top: 50px;\n      font-size: 1em;\n      background: none;\n      border: 1px solid #ddd;\n      padding: 8px 12px;\n      border-left-width: 0px;\n      transition: color ease-in-out .2s;\n      -webkit-user-select: none;\n      -moz-user-select: none;\n      -ms-user-select: none;\n      user-select: none; }\n      .ay-button.prev {\n        border-left-width: 1px;\n        border-top-left-radius: 5px;\n        border-bottom-left-radius: 5px; }\n      .ay-button.next {\n        border-right-width: 1px;\n        border-top-right-radius: 5px;\n        border-bottom-right-radius: 5px; }\n      .ay-button.select {\n        background: #bbb; }\n      .ay-button.choose {\n        background: #0275d8;\n        color: white; }\n      .ay-button:hover {\n        color: #ccc; }\n  "],
                    encapsulation: ViewEncapsulation.None,
                },] },
    ];
    /** @nocollapse */
    PageColmponent.ctorParameters = function () { return []; };
    PageColmponent.propDecorators = {
        'Length': [{ type: Input },],
        'pageDisplayLimit': [{ type: Input },],
        'pageChange': [{ type: Output },],
        'nowPage': [{ type: Input },],
        'prevText': [{ type: Input },],
        'nextText': [{ type: Input },],
        'DefaultPrevTemplate': [{ type: ViewChild, args: ["DefaultPrevTemplate",] },],
        'prevTemplate': [{ type: ContentChild, args: ["prevTemplate",] },],
        'DefaultNextTemplate': [{ type: ViewChild, args: ["DefaultNextTemplate",] },],
        'nextTemplate': [{ type: ContentChild, args: ["nextTemplate",] },],
        'DefaultPageTemplate': [{ type: ViewChild, args: ["DefaultPageTemplate",] },],
        'pageTemplate': [{ type: ContentChild, args: ["pageTemplate",] },],
    };
    return PageColmponent;
}());
export { PageColmponent };
//# sourceMappingURL=page.component.js.map