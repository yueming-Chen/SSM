{"version":3,"sources":["../../tmp/textDate/textDate.component.ts"],"names":[],"mappings":"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","file":"textDate.component.js","sourceRoot":"","sourcesContent":["import { Component, AfterContentInit, OnDestroy, AfterViewInit, Output, EventEmitter, Input, ElementRef, TemplateRef, ViewChild, ContentChild, ViewEncapsulation, Renderer } from '@angular/core';\nimport { Subscription } from \"rxjs\";\nimport * as _ from \"lodash\";\nimport { leftPad, defaults, bind } from \"@ay/util\";\n\n\nexport class TextDateComponent implements AfterContentInit {\n  private error: string;\n  public year: number;\n  public month: number;\n  public day: number;\n\n\n  \n  borderColor: string = \"white\";\n\n  \n  blurDate: EventEmitter<any> = new EventEmitter();\n\n  constructor(public renderer: Renderer, public elementRef: ElementRef) { }\n\n  ngAfterContentInit() {\n\n  }\n\n  yearUp(event) {\n    if (this.year >= 1000) {\n      this.renderer.invokeElementMethod(this.elementRef.nativeElement.querySelector(\"#month input\"), 'focus', []);\n    }\n  }\n\n  monthUp(event) {\n    if (this.month >= 2) {\n      this.renderer.invokeElementMethod(this.elementRef.nativeElement.querySelector(\"#day input\"), 'focus', []);\n    }\n  }\n\n  dayUp(event) {\n    if (this.day >= 4) {\n      this.renderer.invokeElementMethod(this.elementRef.nativeElement, 'blur', []);\n    }\n  }\n  @bind\n  finish() {\n    let valid = this.checkError();\n    if (valid) {\n      let date = { year: this.year, month: this.month, day: this.day };\n      this.blurDate.emit(date);\n    }\n\n  }\n\n  @bind\n  checkError(): boolean {\n    if (this.year && this.month && this.day) {\n      this.error = (this.checkYear() && this.checkMonth() && this.checkDay()) ? '' : '輸入日期錯誤';\n      return (this.error) ? false : true;\n    }\n    this.error = '';\n    return false;\n  }\n\n  @bind\n  checkYear(): boolean {\n    let nowtime = new Date();\n    return !(this.year > nowtime.getFullYear() || this.year < 1900);\n  }\n\n  @bind\n  checkMonth(): boolean {\n    return !(this.month > 12 || this.month <= 0);\n  }\n\n  @bind\n  checkDay(): boolean {\n    let FebDay = this.leapyear() ? 28 : 29;\n    let monthDayList = [31, FebDay, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n    return !((this.day > 31 || this.day <= 0) || (this.day > monthDayList[this.month - 1]));\n  }\n\n  @bind\n  leapyear(): boolean {\n    let year = this.year;\n    return ((year % 4 == 0) && (year % 100 != 0)) || (year % 400 == 0);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ay-textDate',\n  template: `\n    <div class=\"container\" [style.border-color]=\"borderColor\"><ay-input class=\"input\" id=\"year\" [(data)]=\"year\" type=\"tel\" placeholder=\"西元年\" [targetBlur]=\"finish\" (targetKeyUp)=\"yearUp($event)\"></ay-input><ay-input class=\"input\" id=\"month\" [(data)]=\"month\" type=\"tel\" placeholder=\"月\" [targetBlur]=\"finish\" (targetKeyUp)=\"monthUp($event)\"></ay-input><ay-input class=\"input\" id=\"day\" [(data)]=\"day\" type=\"tel\" placeholder=\"日\" [targetBlur]=\"finish\" (targetKeyUp)=\"dayUp($event)\"></ay-input></div><div class=\"error-message\" *ngIf=\"error\">{{ error }}</div>\n  `,\n  styles: [`\n    ay-textDate .container {\n      display: flex;\n      flex-direction: row;\n      border: 1px solid white; }\n      ay-textDate .container .input {\n        background: none; }\n\n    .error-message {\n      margin: 2px 0px;\n      color: red; }\n  `],\n  encapsulation: ViewEncapsulation.None\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Renderer, },\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'borderColor': [{ type: Input },],\n'blurDate': [{ type: Output },],\n};\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}