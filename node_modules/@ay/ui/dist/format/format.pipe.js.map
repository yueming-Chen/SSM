{"version":3,"sources":["../../tmp/format/format.pipe.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,IAAA,EAAoB,MAAO,eAAA,CAAgB;AACpD,OAAO,KAAK,MAAA,MAAY,QAAA,CAAS;AACjC,OAAO,KAAK,OAAA,MAAa,SAAA,CAAU;AAGnC;IAAA;IAiBA,CAAC;IAhBC,8BAAS,GAAT,UAAU,KAAU,EAAE,MAAc;QAClC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;YAC7C,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QACtC,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QACvC,CAAC;IACH,CAAC;IACI,qBAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;oBACnB,IAAI,EAAE,QAAQ;oBACd,IAAI,EAAE,IAAI;iBACX,EAAG,EAAE;KACL,CAAC;IACF,kBAAkB;IACX,yBAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IACF,iBAAC;CAjBD,AAiBC,IAAA;SAjBY,UAAU","file":"format.pipe.js","sourceRoot":"","sourcesContent":["import { Pipe, PipeTransform } from \"@angular/core\";\nimport * as moment from \"moment\";\nimport * as numeral from \"numeral\";\n\n\nexport class FormatPipe implements PipeTransform {\n  transform(value: any, format: string): string {\n    if ([\"0\", \"(\", \"$\"].indexOf(format[0]) == -1) {\n      return moment(value).format(format);\n    } else {\n      return numeral(value).format(format);\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{\n  name: 'format',\n  pure: true\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}