{"version":3,"sources":["../../tmp/input/input.component.ts"],"names":[],"mappings":"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","file":"input.component.js","sourceRoot":"","sourcesContent":["import { Component, AfterContentInit, OnDestroy, AfterViewInit, Input, Output, EventEmitter, ViewChild, ElementRef, TemplateRef, ContentChild, ViewEncapsulation } from '@angular/core';\nimport { defaults } from \"@ay/util/dist\";\n\n\nexport class InputComponent {\n\n  \n  public targetKeydown: EventEmitter<KeyboardEvent> = new EventEmitter();\n\n  \n  public targetKeyPress: EventEmitter<KeyboardEvent> = new EventEmitter();\n\n  \n  public targetKeyUp: EventEmitter<KeyboardEvent> = new EventEmitter();\n\n  \n  public inputBackground: string = \"white\";\n\n  \n  public icon: string = \"\";\n\n  \n  public iconPlace: string = \"left\";\n\n  \n  public placeholder: string = \"\";\n\n  \n  public label: string = null;\n\n  \n  public error: string = null;\n\n  /** data */\n  private _data: any;\n\n  \n  public dataChange: EventEmitter<any> = new EventEmitter<any>();\n\n  \n  public get data(): any {\n    return this._data;\n  }\n\n  public set data(data: any) {\n    if (this._data === data) return;\n    this._data = data;\n    this.dataChange.emit(this._data);\n  }\n\n  /** targetBlur */\n  private _targetBlur: any;\n\n  \n  public targetBlurChange: EventEmitter<any> = new EventEmitter<any>();\n\n  \n  public get targetBlur(): any {\n    return this._targetBlur;\n  }\n\n  public set targetBlur(targetBlur: any) {\n    if (this._targetBlur === targetBlur) return;\n    this._targetBlur = targetBlur;\n    this.targetBlurChange.emit(this._targetBlur);\n  }\n\n  \n  public type: string = null;\n\n\n  static idx: number = 0;\n\n\n  \n  public name: string = \"ay-input-\" + InputComponent.idx++;\n\n  /** Content */\n  \n  public defaultContentTemplate: ElementRef = null;\n\n  \n  public contentTemplate: TemplateRef<any> = null;\n\n  /** Label */\n  \n  public defaultLabelTemplate: ElementRef = null;\n\n  \n  public labelTemplate: TemplateRef<any> = null;\n\n  /** defaultAutocompleteTemplate */\n  \n  public defaultAutocompleteTemplate: ElementRef = null;\n\n  \n  public autocompleteTemplate: TemplateRef<any> = null;\n\n\n  public constructor() {\n    this.targetBlur = () => { };\n  }\n\n  public ngAfterContentInit() {\n    this.contentTemplate = defaults(this.contentTemplate, this.defaultContentTemplate);\n    this.labelTemplate = defaults(this.labelTemplate, this.defaultLabelTemplate);\n    this.autocompleteTemplate = defaults(this.autocompleteTemplate, this.defaultAutocompleteTemplate);\n  }\n\n  public ngAfterViewInit() {\n\n  }\n\n  keyDown($event) {\n    this.targetKeydown.emit($event);\n  }\n  keyPress($event) {\n    this.targetKeyPress.emit($event);\n  }\n  keyUp($event) {\n    this.targetKeyUp.emit($event);\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ay-input',\n  template: `\n    <ng-template #defaultContentTemplate=\"\" let-error=\"error\" let-name=\"name\" let-placeholder=\"placeholder\" let-type=\"type\"><input [(ngModel)]=\"data\" [id]=\"name\" [name]=\"name\" [ngClass]=\"{ error: error }\" [placeholder]=\"placeholder\" [type]=\"type\" (blur)=\"targetBlur()\" (keydown)=\"keyDown($event)\" (keypress)=\"keyPress($event)\" (keyup)=\"keyUp($event)\" [style.background]=\"inputBackground\" [class.invisible]=\"inputBackground=='none'\"></ng-template><ng-template #defaultLabelTemplate=\"\" let-label=\"label\" let-name=\"name\"><label *ngIf=\"label\" [for]=\"name\">{{ label }}</label></ng-template><ng-template #defaultAutocompleteTemplate=\"\"></ng-template><div class=\"flex-row\"><ng-template [ngTemplateOutlet]=\"labelTemplate\" [ngOutletContext]=\"{ label: label, name: name }\"></ng-template><div class=\"flex-1 flex-row\"><div class=\"fa\" *ngIf=\"icon &amp;&amp; iconPlace == 'left'\" [ngClass]=\"icon\"></div><div class=\"content flex-1\"><ng-template [ngTemplateOutlet]=\"contentTemplate\" [ngOutletContext]=\"{ error: error, name: name, placeholder: placeholder, type: type }\"></ng-template><ng-template [ngTemplateOutlet]=\"autocompleteTemplate\"></ng-template></div><div class=\"fa\" *ngIf=\"icon &amp;&amp; iconPlace == 'right'\" [ngClass]=\"icon\"></div></div></div><div class=\"error-message\" *ngIf=\"error\">{{ error }}</div>\n  `,\n  styles: [`\n    ay-input {\n      display: block;\n      width: 100%;\n      box-sizing: border-box;\n      position: relative; }\n      ay-input label {\n        font-size: .8em;\n        line-height: 2.5em;\n        width: 6em;\n        display: inline-block;\n        text-align: right;\n        margin-right: 1em; }\n      ay-input > .flex-row > .flex-1.flex-row > .fa {\n        position: absolute;\n        left: 0;\n        width: 2em;\n        text-align: center;\n        line-height: 2em;\n        color: #757575; }\n      ay-input .content + .fa {\n        right: 0; }\n      ay-input .fa + .content input {\n        padding-left: 2em; }\n      ay-input input {\n        padding: .25em .5em;\n        font-size: 1em;\n        line-height: 1.5em;\n        border: 1px solid transparent;\n        outline: none !important;\n        min-width: 1em;\n        width: 100%;\n        box-sizing: border-box;\n        transition: all .1s linear; }\n        ay-input input.error {\n          position: relative;\n          color: #F85361;\n          border: 1px solid #FF0000;\n          animation-name: ay-input-error;\n          animation-duration: 1s;\n          animation-iteration-count: infinite;\n          position: relative; }\n        ay-input input:focus {\n          box-shadow: 0 1px 7px rgba(0, 0, 0, 0.05), 0 7px 17px rgba(0, 0, 0, 0.1);\n          animation-name: none;\n          animation-duration: 1s;\n          animation-iteration-count: infinite; }\n        ay-input input.error:focus {\n          border: 1px solid #F85361;\n          color: #324A5E; }\n        ay-input input.invisible:focus {\n          box-shadow: none;\n          animation-name: none;\n          animation-duration: 0s; }\n      ay-input .error-message {\n        color: #F85361;\n        line-height: 1.2em;\n        margin-left: 7em;\n        font-size: .8em;\n        height: 1.2em; }\n\n    @keyframes ay-input-error {\n      0% {\n        border-color: #F85361; }\n      50% {\n        border-color: #FFFFFF; }\n      100% {\n        border-color: #F85361; } }\n  `],\n  encapsulation: ViewEncapsulation.None\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'targetKeydown': [{ type: Output },],\n'targetKeyPress': [{ type: Output },],\n'targetKeyUp': [{ type: Output },],\n'inputBackground': [{ type: Input },],\n'icon': [{ type: Input },],\n'iconPlace': [{ type: Input },],\n'placeholder': [{ type: Input },],\n'label': [{ type: Input },],\n'error': [{ type: Input },],\n'dataChange': [{ type: Output },],\n'data': [{ type: Input },],\n'targetBlurChange': [{ type: Output },],\n'targetBlur': [{ type: Input },],\n'type': [{ type: Input },],\n'name': [{ type: Input },],\n'defaultContentTemplate': [{ type: ViewChild, args: [\"defaultContentTemplate\", ] },],\n'contentTemplate': [{ type: ContentChild, args: [\"contentTemplate\", ] },],\n'defaultLabelTemplate': [{ type: ViewChild, args: [\"defaultLabelTemplate\", ] },],\n'labelTemplate': [{ type: ContentChild, args: [\"labelTemplate\", ] },],\n'defaultAutocompleteTemplate': [{ type: ViewChild, args: [\"defaultAutocompleteTemplate\", ] },],\n'autocompleteTemplate': [{ type: ContentChild, args: [\"autocompleteTemplate\", ] },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}