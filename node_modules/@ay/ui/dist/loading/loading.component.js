import { Component, Output, Input, EventEmitter, Renderer, HostBinding, ElementRef, ViewEncapsulation } from "@angular/core";
import { LoadingService } from "./loading.service";
var LoadingComponent = (function () {
    function LoadingComponent(loadingService, element, renderer) {
        this.loadingService = loadingService;
        this.element = element;
        this.renderer = renderer;
        this.color = '#308BC8';
        this.height = '5';
        /** progress */
        this._progress = 0;
        this.progressChange = new EventEmitter();
        this.completeChange = new EventEmitter();
    }
    Object.defineProperty(LoadingComponent.prototype, "progress", {
        get: function () {
            return this._progress;
        },
        set: function (progress) {
            if (this._progress === progress)
                return;
            this._progress = progress;
            if (this._progress === 100)
                this.isComplete = true;
            this.progressChange.emit(this._progress);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LoadingComponent.prototype, "isComplete", {
        get: function () {
            return this._isComplete;
        },
        set: function (isComplete) {
            if (this._isComplete === isComplete)
                return;
            this._isComplete = isComplete;
            if (this._isComplete === true)
                this.progress = 100;
            this.completeChange.emit(this._isComplete);
        },
        enumerable: true,
        configurable: true
    });
    LoadingComponent.prototype.complete = function () {
        this.isComplete = true;
    };
    LoadingComponent.prototype.ngAfterContentInit = function () {
        var _this = this;
        if (this.element.nativeElement.id == 'common') {
            this.loadingService.colorChange.subscribe(function (color) { return _this.renderer.setElementStyle(_this.element.nativeElement, "background-color", color); });
            this.loadingService.progressChange.subscribe(function (progress) { return _this.renderer.setElementStyle(_this.element.nativeElement, "width", progress + "%"); });
            this.loadingService.displayChange.subscribe(function (display) {
                _this.renderer.setElementStyle(_this.element.nativeElement, "opacity", display ? "1" : "0");
                _this.renderer.setElementStyle(_this.element.nativeElement, "filter", display ? "blur(0px)" : "blur(3px)");
            });
        }
    };
    LoadingComponent.decorators = [
        { type: Component, args: [{
                    selector: "ay-loading",
                    template: '',
                    styles: ["\n    ay-loading {\n      height: 10px;\n      box-shadow: 0px 0px 4px rgba(0, 0, 0, 0.1);\n      transition: all .3s linear; }\n      ay-loading#common {\n        position: fixed;\n        left: 0;\n        bottom: 0;\n        z-index: 1000; }\n  "],
                    encapsulation: ViewEncapsulation.None
                },] },
    ];
    /** @nocollapse */
    LoadingComponent.ctorParameters = function () { return [
        { type: LoadingService, },
        { type: ElementRef, },
        { type: Renderer, },
    ]; };
    LoadingComponent.propDecorators = {
        'color': [{ type: HostBinding, args: ['style.backgroundColor',] },],
        'height': [{ type: HostBinding, args: ['style.height.px',] },],
        'progressChange': [{ type: Output },],
        'progress': [{ type: Input }, { type: HostBinding, args: ['style.width.%',] },],
        'completeChange': [{ type: Output },],
        'isComplete': [{ type: Input },],
    };
    return LoadingComponent;
}());
export { LoadingComponent };
//# sourceMappingURL=loading.component.js.map