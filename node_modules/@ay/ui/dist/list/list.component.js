var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import { Component, ApplicationRef, Input, ViewChild, ContentChild, HostListener, ViewEncapsulation } from '@angular/core';
import { defaults, bind, toObserver } from "@ay/util";
export var Direction;
(function (Direction) {
    Direction[Direction["Down"] = 0] = "Down";
    Direction[Direction["Up"] = 1] = "Up";
})(Direction || (Direction = {}));
;
var ListComponent = (function () {
    function ListComponent(_app) {
        this._app = _app;
        this.that = this;
        this.queriedItems = [];
        this._title = "";
        /** icon */
        this.icon = "fa-bars";
        /** items */
        this._items = [];
        //- 樣板
        /** Item */
        this.defaultItemTemplate = null;
        this.itemTemplate = null;
        /** Title */
        this.defaultTitleTemplate = null;
        this.titleTemplate = null;
        /** Empty */
        this.defaultEmptyTemplate = null;
        this.emptyTemplate = null;
    }
    Object.defineProperty(ListComponent.prototype, "title", {
        //- 屬性
        // title
        get: function () {
            return this._title;
        },
        set: function (title) {
            if (this._title === title)
                return;
            this._title = title;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ListComponent.prototype, "items", {
        get: function () {
            return this._items;
        },
        set: function (items) {
            if (this._items === items)
                return;
            this._items = items;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ListComponent.prototype, "empty", {
        get: function () {
            return this._empty;
        },
        set: function (empty) {
            if (this._empty === empty)
                return;
            this._empty = empty;
        },
        enumerable: true,
        configurable: true
    });
    ListComponent.prototype.ngAfterViewInit = function () {
    };
    ListComponent.prototype.ngOnDestroy = function () {
        if (this._updateItemsChange$)
            this._updateItemsChange$.unsubscribe();
    };
    ListComponent.prototype.ngAfterContentInit = function () {
        this.itemTemplate = defaults(this.itemTemplate, this.defaultItemTemplate);
        this.titleTemplate = defaults(this.titleTemplate, this.defaultTitleTemplate);
        this.emptyTemplate = defaults(this.emptyTemplate, this.defaultEmptyTemplate);
        this.queryItems();
    };
    ListComponent.prototype.queryItems = function () {
        if (this._updateItemsChange$) {
            this._updateItemsChange$.unsubscribe();
        }
        if (!this.queriedItems) {
            return null;
        }
        this.queriedItems = [];
        this.isLoading = true;
        this._updateItemsChange$ = toObserver(this.items)
            .subscribe(this.afterQueryItems, this.onError);
    };
    ListComponent.prototype.afterQueryItems = function (items) {
        this.isLoading = false;
        this.queriedItems = this.queriedItems.concat(items);
    };
    ListComponent.prototype.onError = function (err) {
        console.error(err);
    };
    ListComponent.prototype.hover = function (event, item, index) {
        if (!this.isDraging)
            return;
        if (event.which === 0)
            return this.stopDrag(event);
        if (this.hoveredIndex === index) {
            this.direction = this.direction == Direction.Down ? Direction.Up : Direction.Down;
        }
        else if (this.hoveredIndex < index) {
            this.direction = Direction.Down;
        }
        else {
            this.direction = Direction.Up;
        }
        this.hoveredIndex = index;
        event.stopPropagation();
        event.preventDefault();
        return false;
    };
    ListComponent.prototype.startDarg = function (event, item, index) {
        this.isDraging = true;
        this.dragedIndex = index;
        this.dragedItem = item;
        this.hoveredIndex = index;
        this.direction = Direction.Up;
        if (this.hoveredIndex === this.queriedItems.length) {
            this.hoveredIndex--;
            this.direction = Direction.Down;
        }
        event.stopPropagation();
        event.preventDefault();
        return false;
    };
    ListComponent.prototype.stopDrag = function (event) {
        if (!this.isDraging)
            return;
        if (this.direction === Direction.Down)
            this.hoveredIndex++;
        this.queriedItems.splice(this.hoveredIndex, 0, this.dragedItem);
        if (this.dragedIndex > this.hoveredIndex)
            this.dragedIndex++;
        this.queriedItems.splice(this.dragedIndex, 1);
        this.isDraging = false;
        this.hoveredIndex = null;
        this.dragedIndex = null;
        this.dragedItem = null;
    };
    ListComponent.decorators = [
        { type: Component, args: [{
                    selector: 'ay-list',
                    template: "\n    <ng-template #defaultTitleTemplate=\"\" let-title=\"title\"><h2>{{ title }}</h2></ng-template><ng-template #defaultEmptyTemplate=\"\" let-empty=\"empty\">{{ empty }}</ng-template><ng-template #defaultItemTemplate=\"\" let-icon=\"icon\" let-index=\"index\" let-item=\"item\" let-list=\"list\"><div class=\"Item flex-1\">{{ item }}</div><div class=\"fa\" [ngClass]=\"icon\" (mousedown)=\"list.startDarg($event, item, index)\"></div></ng-template><ng-template [ngIf]=\"queriedItems.length\" [ngIfElse]=\"elseElement\" [ngIfThen]=\"thenElement\"></ng-template><ng-template #thenElement=\"\"><ng-template [ngTemplateOutlet]=\"titleTemplate\" [ngOutletContext]=\"{ title: title }\"></ng-template><ng-template [ngForOf]=\"queriedItems\" let-index=\"index\" let-item=\"\" ngFor=\"\"><ng-template [ngIf]=\"hoveredIndex == index &amp;&amp; direction == 1\"><div class=\"item shadow flex-row\"><ng-template [ngTemplateOutlet]=\"itemTemplate\" [ngOutletContext]=\"{ item: dragedItem, index: hoveredIndex, list: that, icon: icon }\"></ng-template></div></ng-template><div class=\"item flex-row\" *ngIf=\"dragedItem != item\" (mouseenter)=\"hover($event, item, index)\"><ng-template [ngTemplateOutlet]=\"itemTemplate\" [ngOutletContext]=\"{ item: item, index: index, list: that, icon: icon }\"></ng-template></div><ng-template [ngIf]=\"hoveredIndex == index &amp;&amp; direction == 0\"><div class=\"item flex-row shadow\"><ng-template [ngTemplateOutlet]=\"itemTemplate\" [ngOutletContext]=\"{ item: dragedItem, index: hoveredIndex, list: that, icon: icon }\"></ng-template></div></ng-template></ng-template></ng-template><ng-template #elseElement=\"\"><ng-template [ngTemplateOutlet]=\"titleTemplate\" [ngOutletContext]=\"{ title: title }\"></ng-template><ng-template [ngTemplateOutlet]=\"emptyTemplate\" [ngOutletContext]=\"{ empty: empty }\"></ng-template></ng-template>\n  ",
                    styles: ["\n    ay-list .item {\n      user-select: none; }\n\n    ay-list .Item {\n      padding: .5em 1em; }\n\n    ay-list .shadow {\n      background-color: #DDD; }\n\n    ay-list .fa-bars {\n      color: #CCC;\n      cursor: pointer; }\n  "],
                    encapsulation: ViewEncapsulation.None
                },] },
    ];
    /** @nocollapse */
    ListComponent.ctorParameters = function () { return [
        { type: ApplicationRef, },
    ]; };
    ListComponent.propDecorators = {
        'title': [{ type: Input },],
        'icon': [{ type: Input },],
        'items': [{ type: Input },],
        'empty': [{ type: Input },],
        'defaultItemTemplate': [{ type: ViewChild, args: ["defaultItemTemplate",] },],
        'itemTemplate': [{ type: ContentChild, args: ["itemTemplate",] },],
        'defaultTitleTemplate': [{ type: ViewChild, args: ["defaultTitleTemplate",] },],
        'titleTemplate': [{ type: ContentChild, args: ["titleTemplate",] },],
        'defaultEmptyTemplate': [{ type: ViewChild, args: ["defaultEmptyTemplate",] },],
        'emptyTemplate': [{ type: ContentChild, args: ["emptyTemplate",] },],
        'stopDrag': [{ type: HostListener, args: ["mouseup", ['$event'],] },],
    };
    __decorate([
        bind
    ], ListComponent.prototype, "queryItems", null);
    __decorate([
        bind
    ], ListComponent.prototype, "afterQueryItems", null);
    __decorate([
        bind
    ], ListComponent.prototype, "onError", null);
    __decorate([
        bind
    ], ListComponent.prototype, "hover", null);
    __decorate([
        bind
    ], ListComponent.prototype, "startDarg", null);
    __decorate([
        bind
    ], ListComponent.prototype, "stopDrag", null);
    return ListComponent;
}());
export { ListComponent };
//# sourceMappingURL=list.component.js.map