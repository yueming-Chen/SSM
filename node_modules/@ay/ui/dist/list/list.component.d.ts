import { AfterContentInit, OnDestroy, AfterViewInit, ApplicationRef, ElementRef, TemplateRef } from '@angular/core';
import { toObservable } from "@ay/util";
export declare enum Direction {
    Down = 0,
    Up = 1,
}
export declare class ListComponent implements AfterContentInit, OnDestroy, AfterViewInit {
    _app: ApplicationRef;
    that: this;
    dragedIndex: number;
    hoveredIndex: number;
    dragedItem: any;
    direction: Direction;
    isLoading: boolean;
    queriedItems: any[];
    private _updateItemsChange$;
    isDraging: boolean;
    private _title;
    title: string;
    /** icon */
    icon: string;
    /** items */
    private _items;
    items: toObservable<any>;
    /** empty */
    private _empty;
    empty: string;
    /** Item */
    defaultItemTemplate: ElementRef;
    itemTemplate: TemplateRef<any>;
    /** Title */
    defaultTitleTemplate: ElementRef;
    titleTemplate: TemplateRef<any>;
    /** Empty */
    defaultEmptyTemplate: ElementRef;
    emptyTemplate: TemplateRef<any>;
    constructor(_app: ApplicationRef);
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    ngAfterContentInit(): void;
    queryItems(): any;
    afterQueryItems(items: any): void;
    onError(err: any): void;
    hover(event: MouseEvent, item: any, index: number): false | void;
    startDarg(event: MouseEvent, item: any, index: number): boolean;
    stopDrag(event: MouseEvent): void;
}
