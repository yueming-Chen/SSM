{"version":3,"sources":["../../tmp/chips/chips.component.ts"],"names":[],"mappings":"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","file":"chips.component.js","sourceRoot":"","sourcesContent":["import { Component, HostListener, TemplateRef, OnInit, OnDestroy, ViewChild, ElementRef, ContentChild, Input, EventEmitter, Output, AfterViewInit, AfterContentInit, Renderer, NgZone, ViewEncapsulation } from \"@angular/core\";\nimport { log, bind, range, defaults, cache, falsy } from \"@ay/util\";\nimport { Subscription } from \"rxjs/Rx\";\n\n\n\nexport class ChipsComponent implements AfterContentInit {\n  public editTarget: any;\n  public choose: string = \"\";\n\n  private thisData;\n  private thisIndex;\n\n  \n  public limitdata: any[];\n\n  \n  public inputBackground: string = \"none\";\n\n  \n  public autocomplete: boolean = false;\n\n  \n  public editable: boolean = false;\n\n  \n  public icon: string = \"fa-times\";\n\n  \n  limitDisplay: number = 5;\n\n  \n  inputPlaceholder: string = \"\";\n\n  \n  removable: boolean;\n\n  \n  readonly: boolean = false;\n\n  private _data: any[];\n\n  \n  dataChange: EventEmitter<any> = new EventEmitter();\n\n  \n  get data(): any[] {\n    return this._data;\n  }\n\n  set data(data: any[]) {\n    if (this._data === data) return;\n    this._data = data;\n    this.dataChange.emit(this._data);\n  }\n\n  private _inputData: any;\n  \n  public inputDataChange: EventEmitter<any> = new EventEmitter<any>();\n\n  \n  public get inputData(): any {\n    return this._inputData;\n  }\n\n  public set inputData(inputData: any) {\n    if (this._inputData === inputData) return;\n    this._inputData = inputData;\n    this.inputDataChange.emit(this._inputData);\n  }\n\n  \n  DefaultChipTemplate: ElementRef = null;\n\n  \n  chipTemplate: TemplateRef<any> = null;\n\n  \n  DefaultInputTemplate: ElementRef = null;\n\n  \n  inputTemplate: TemplateRef<any> = null;\n\n  constructor() {\n    this.removable = true;\n    this.data = this.data || [];\n  }\n\n  ngAfterContentInit() {\n    this.chipTemplate = defaults(this.chipTemplate, this.DefaultChipTemplate);\n    this.inputTemplate = defaults(this.inputTemplate, this.DefaultInputTemplate);\n  }\n\n  @bind\n  public removeItem(index: number, data: any) {\n    this.data = this.data.filter((_data, _index) => {\n      return (data == _data && index == _index) ? false : true\n    });\n  }\n\n  public focusChip(data: any, index: number) {\n    if (this.choose === data) {\n      this.editTarget = data;\n    } else {\n      this.thisData = this.choose = data;\n      this.thisIndex = index;\n    }\n  }\n\n  public blurChip(data: any, index: number) {\n    this.choose = \"\";\n    this.thisData = \"\";\n    this.thisIndex = 0;\n  }\n\n  public inputEnter() {\n    if (this.data.length < this.limitDisplay && this.inputData) { this.data.push(this.inputData); }\n    this.inputData = \"\";\n  }\n\n  public editFinish($event) {\n    $event.preventDefault();\n    $event.target.blur();\n    this.data = this.data.map((data, index) => {\n      return (data == this.thisData && index == this.thisIndex && $event.target.innerText) ? $event.target.innerText : data;\n    });\n  }\n\n  public autocompleteEnter(event: any) {\n    setTimeout(() => {\n      let val = event.target.value;\n      if (val) {\n        this.inputData = this.data.push(val);\n        event.target.value = \"\";\n      }\n    }, 100)\n\n  }\n\n  \n  KeyboardInput(event: KeyboardEvent) {\n    let back = (event.code == \"Backspace\") ? true : false;\n    if (back) {\n      this.removeItem(this.thisIndex, this.thisData);\n    }\n  }\n\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  template: `\n    <ng-template #DefaultChipTemplate=\"\" let-index=\"i\" let-data=\"data\"><span class=\"ay-chip\">{{data}}</span></ng-template><div class=\"chips flex\"><ng-template [ngForOf]=\"data\" let-i=\"index\" let-data=\"\" ngFor=\"\"><div class=\"chip\" (focus)=\"focusChip(data,i)\" (blur)=\"blurChip(data,i)\" [class.choose]=\"choose == data\" [tabindex]=\"i\"><div class=\"text\" [attr.contenteditable]=\"editable &amp;&amp; editTarget==data\" (keydown.enter)=\"editFinish($event)\"><ng-template [ngTemplateOutlet]=\"chipTemplate\" [ngOutletContext]=\"{data:data,i:i}\"></ng-template></div><div class=\"cancelButton\" *ngIf=\"removable==true\" (click)=\"removeItem(i,data)\"><div class=\"fa\" [ngClass]=\"icon\"></div></div></div></ng-template><ng-template [ngTemplateOutlet]=\"inputTemplate\" [ngOutletContext]=\"{data:data,i:i}\"></ng-template><input class=\"input\" *ngIf=\"!readonly &amp;&amp; !autocomplete\" [(ngModel)]=\"inputData\" (keyup.enter)=\"inputEnter()\" [placeholder]=\"inputPlaceholder\" type=\"text\"><ay-autocomplete *ngIf=\"!readonly &amp;&amp; autocomplete\" [items]=\"limitdata\" maxCount=\"3\" (keydown.enter)=\"autocompleteEnter($event)\" [inputBackground]=\"inputBackground\"></ay-autocomplete></div>\n  `,\n  selector: 'ay-chips',\n  styles: [`\n    .test {\n      margin-top: 50px; }\n\n    .chips {\n      border-bottom: 1px solid #ddd;\n      padding-bottom: 5px;\n      margin: 5px 1px; }\n      .chips .input {\n        background: none;\n        border: 0px;\n        user-select: none;\n        display: flex;\n        justify-content: flex-start;\n        align-items: center;\n        height: 32px;\n        line-height: 32px;\n        margin: 8px 8px 0 0;\n        padding: 0 12px;\n        box-sizing: border-box;\n        max-width: 100%;\n        position: relative;\n        font-size: 1em; }\n        .chips .input:focus {\n          outline: none; }\n\n    .flex {\n      display: flex; }\n\n    .cancelButton {\n      cursor: pointer;\n      padding-left: 5px;\n      margin-left: 5px;\n      display: flex;\n      align-items: center; }\n\n    .chip {\n      cursor: default;\n      border-radius: 16px;\n      display: flex;\n      justify-content: flex-start;\n      align-items: center;\n      height: 32px;\n      line-height: 32px;\n      margin: 8px 8px 0 0;\n      padding: 0 12px;\n      box-sizing: border-box;\n      max-width: 100%;\n      position: relative;\n      background: #e0e0e0;\n      color: #424242; }\n      .chip.choose {\n        color: white;\n        background: #106cc8; }\n  `],\n  encapsulation: ViewEncapsulation.None,\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'limitdata': [{ type: Input },],\n'inputBackground': [{ type: Input },],\n'autocomplete': [{ type: Input },],\n'editable': [{ type: Input },],\n'icon': [{ type: Input },],\n'limitDisplay': [{ type: Input },],\n'inputPlaceholder': [{ type: Input },],\n'removable': [{ type: Input },],\n'readonly': [{ type: Input },],\n'dataChange': [{ type: Output },],\n'data': [{ type: Input },],\n'inputDataChange': [{ type: Output },],\n'inputData': [{ type: Input },],\n'DefaultChipTemplate': [{ type: ViewChild, args: [\"DefaultChipTemplate\", ] },],\n'chipTemplate': [{ type: ContentChild, args: [\"chipTemplate\", ] },],\n'DefaultInputTemplate': [{ type: ViewChild, args: [\"DefaultInputTemplate\", ] },],\n'inputTemplate': [{ type: ContentChild, args: [\"inputTemplate\", ] },],\n'KeyboardInput': [{ type: HostListener, args: ['window:keydown', ['$event'], ] },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}